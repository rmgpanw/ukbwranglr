% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clinical_events.R
\name{extract_phenotypes}
\alias{extract_phenotypes}
\title{Extract phenotypes from clinical events data}
\usage{
extract_phenotypes(
  clinical_events,
  clinical_codes,
  source_filter = NULL,
  verbose = TRUE
)
}
\arguments{
\item{clinical_events}{A long format data frame created by
\code{\link{tidy_clinical_events}}, \code{\link{tidy_gp_clinical}},
\code{\link{tidy_gp_scripts}} or \code{\link{make_clinical_events_db}}.
This can also be a \code{\link[dbplyr]{tbl_dbi}} object.}

\item{clinical_codes}{data frame. Must match the format as per
\code{\link{example_clinical_codes}}.}

\item{source_filter}{Character vector of data sources to filter for
(optional).}

\item{verbose}{If \code{TRUE} (default), display progress messages.}
}
\value{
A data frame.
}
\description{
Filters a clinical events table created by \code{\link{tidy_clinical_events}}
for a set clinical codes that represent one or more phenotypes.
}
\examples{
library(magrittr)

# dummy clinical events data frame
dummy_ukb_data_dict <- get_ukb_dummy("dummy_Data_Dictionary_Showcase.tsv")
dummy_ukb_codings <- get_ukb_dummy("dummy_Codings.tsv")

dummy_clinical_events <- read_ukb(
  path = get_ukb_dummy("dummy_ukb_main.tsv", path_only = TRUE),
  ukb_data_dict = dummy_ukb_data_dict,
  ukb_codings = dummy_ukb_codings
) \%>\%
  tidy_clinical_events(
    ukb_data_dict = dummy_ukb_data_dict,
    ukb_codings = dummy_ukb_codings
  ) \%>\%
  dplyr::bind_rows()

head(dummy_clinical_events)

# dummy clinical code list
example_clinical_codes()

# Filter for participants with matching clinical codes
extract_phenotypes(
  clinical_events = dummy_clinical_events,
  clinical_codes = example_clinical_codes()
)
}
\seealso{
Other clinical events: 
\code{\link{clinical_events_sources}()},
\code{\link{example_clinical_codes}()},
\code{\link{make_clinical_events_db}()},
\code{\link{tidy_clinical_events}()}
}
\concept{clinical events}
