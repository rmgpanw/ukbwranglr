% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sqlite_db.R
\name{file_to_sqlite_db}
\alias{file_to_sqlite_db}
\title{Write a file to a database}
\usage{
file_to_sqlite_db(
  file,
  table,
  db_path = "ukb.db",
  chunk_size = 10000,
  delim = "\\t",
  col_types = readr::cols(.default = "c"),
  verbose = TRUE,
  append = FALSE,
  data_processing_function = NULL,
  quote = "\\"",
  escape_backslash = FALSE,
  escape_double = TRUE,
  col_names = TRUE,
  locale = readr::default_locale(),
  na = c("", "NA"),
  quoted_na = TRUE,
  comment = "",
  trim_ws = FALSE,
  skip = 0,
  guess_max = min(1000, chunk_size),
  progress = readr::show_progress(),
  skip_empty_rows = TRUE,
  ...
)
}
\arguments{
\item{file}{Character. The path to the file to be written to `db_path`.}

\item{table}{Character. Name of table to write to.}

\item{db_path}{Character. Path to a SQLite database. A new database will be
created if this does not already exist. Default is "ukb.db".}

\item{chunk_size}{The number of rows to include in each chunk. Default is
10000.}

\item{delim}{Single character used to separate fields within a record.}

\item{col_types}{Default is for all columns to be type character.}

\item{verbose}{Print time taken after each chunk has been written to
database.}

\item{append}{Append to table if already exists. Default is `FALSE`.}

\item{data_processing_function}{A function to be applied to each chunk before
writing to database. Default is `NULL`.}

\item{quote}{Single character used to quote strings.}

\item{escape_backslash}{Does the file use backslashes to escape special
characters? This is more general than \code{escape_double} as backslashes
can be used to escape the delimiter character, the quote character, or
to add special characters like \verb{\\\\n}.}

\item{escape_double}{Does the file escape quotes by doubling them?
i.e. If this option is \code{TRUE}, the value \verb{""""} represents
a single quote, \verb{\\"}.}

\item{col_names}{Either \code{TRUE}, \code{FALSE} or a character vector
of column names.

If \code{TRUE}, the first row of the input will be used as the column
names, and will not be included in the data frame. If \code{FALSE}, column
names will be generated automatically: X1, X2, X3 etc.

If \code{col_names} is a character vector, the values will be used as the
names of the columns, and the first row of the input will be read into
the first row of the output data frame.

Missing (\code{NA}) column names will generate a warning, and be filled
in with dummy names \code{X1}, \code{X2} etc. Duplicate column names
will generate a warning and be made unique with a numeric suffix.}

\item{locale}{The locale controls defaults that vary from place to place.
The default locale is US-centric (like R), but you can use
\code{\link[readr:locale]{locale()}} to create your own locale that controls things like
the default time zone, encoding, decimal mark, big mark, and day/month
names.}

\item{na}{Character vector of strings to interpret as missing values. Set this
option to \code{character()} to indicate no missing values.}

\item{quoted_na}{Should missing values inside quotes be treated as missing
values (the default) or strings.}

\item{comment}{A string used to identify comments. Any text after the
comment characters will be silently ignored.}

\item{trim_ws}{Should leading and trailing whitespace be trimmed from
each field before parsing it?}

\item{skip}{Number of lines to skip before reading data.}

\item{guess_max}{Maximum number of records to use for guessing column types.}

\item{progress}{Display a progress bar? By default it will only display
in an interactive session and not while knitting a document. The display
is updated every 50,000 values and will only display if estimated reading
time is 5 seconds or more. The automatic progress bar can be disabled by
setting option \code{readr.show_progress} to \code{FALSE}.}

\item{skip_empty_rows}{Should blank rows be ignored altogether? i.e. If this
option is \code{TRUE} then blank rows will not be represented at all.  If it is
\code{FALSE} then they will be represented by \code{NA} values in all the columns.}

\item{...}{additional parameters passed on to `data_processing_function`.}
}
\description{
Writes a file in chunks to a SQLite database, with or without pre-processing.
}
\details{
This function is designed to be used with large files that may not fit into
memory on a personal computer. The file is written to a table in a SQLite
database in chunks with the option to apply a 'pre-processing' function to
each chunk (e.g. reshape the data).
}
\section{Under the hood}{


  Relies on the \href{https://db.rstudio.com/dbi/}{DBI} and
  \href{https://db.rstudio.com/databases/sqlite/}{RSQLite} packages to create
  and write to a SQLite database, and \code{\link[readr]{read_delim_chunked}}
  to read the input file in chunks.
}

\seealso{
Other Generate a UKB database.: 
\code{\link{gp_clinical_to_sqlite_db}()}
}
\concept{Generate a UKB database.}
