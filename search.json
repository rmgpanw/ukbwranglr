[{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ukbwranglr","title":"Contributing to ukbwranglr","text":"First , thanks considering contributing ukbwranglr! üëç ‚Äôs people like make rewarding us - project maintainers - work ukbwranglr. üòä ukbwranglr open source project, maintained people care. directly funded .","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to ukbwranglr","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to ukbwranglr","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"share-the-love-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to ukbwranglr","text":"Think ukbwranglr useful? Let others discover , telling person, via Twitter blog post. Using ukbwranglr paper writing? Consider citing .","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to ukbwranglr","text":"Using ukbwranglr got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer [email][mailto:email].","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to ukbwranglr","text":"idea new ukbwranglr feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to ukbwranglr","text":"Using ukbwranglr discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to ukbwranglr","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to ukbwranglr","text":"website generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to ukbwranglr","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to ukbwranglr","text":"Care fix bugs implement new functionality ukbwranglr? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to ukbwranglr","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Alasdair Warwick Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"ukbwranglr","text":"basic workflow follows: Create data dictionary main UK Biobank dataset make_data_dict(). Read selected variables R read_ukb(). Summarise continuous variables summarise_numerical_variables(). Tidy clinical events data tidy_clinical_events() make_clinical_events_db(), extract outcomes interest extract_phenotypes(). Analyse. steps now illustrated dummy dataset included ukbwranglr: can try steps either locally installing ukbwranglr machine, online clicking following link RStudio Cloud1 navigating Rmd file ‚Äòvignettes‚Äô directory:","code":"# path to dummy data ukb_main_path <- get_ukb_dummy(\"dummy_ukb_main.tsv\",                                      path_only = TRUE)  # raw data read_tsv(ukb_main_path) #> Rows: 10 Columns: 71 #> ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> Delimiter: \"\\t\" #> chr  (14): 41270-0.0, 41270-0.3, 41271-0.0, 40001-0.0, 40001-1.0, 40002-0.0,... #> dbl  (43): eid, 31-0.0, 34-0.0, 52-0.0, 21000-0.0, 21000-1.0, 21000-2.0, 210... #> date (14): 41280-0.0, 41280-0.3, 41281-0.0, 41281-0.3, 40000-0.0, 40000-1.0,... #>  #> ‚Ñπ Use `spec()` to retrieve the full column specification for this data. #> ‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 10 √ó 71 #>      eid `31-0.0` `34-0.0` `52-0.0` `21000-0.0` `21000-1.0` `21000-2.0` #>    <dbl>    <dbl>    <dbl>    <dbl>       <dbl>       <dbl>       <dbl> #>  1     1        0     1952        8          -1           2        3003 #>  2     2        0     1946        3          -3        2001        3004 #>  3     3        1     1951        4           1        2002          -1 #>  4     4        0     1956        9        1001        2003        4001 #>  5     5       NA       NA        4        1002        2004        4002 #>  6     6        1     1948        2        1003           3        4003 #>  7     7        0     1949       12          NA        3001           5 #>  8     8        1     1956       10          NA           5          NA #>  9     9        0     1962        4        4001          NA          NA #> 10    10        1     1953        2        4001          NA          NA #> # ‚Ñπ 64 more variables: `21001-0.0` <dbl>, `21001-1.0` <dbl>, `21001-2.0` <dbl>, #> #   `4080-0.0` <dbl>, `4080-0.1` <dbl>, `4080-0.2` <dbl>, `4080-0.3` <dbl>, #> #   `4080-1.0` <dbl>, `4080-1.1` <dbl>, `4080-1.2` <dbl>, `4080-1.3` <dbl>, #> #   `20001-0.0` <dbl>, `20001-0.3` <dbl>, `20001-2.0` <dbl>, `20001-2.3` <dbl>, #> #   `20002-0.0` <dbl>, `20002-0.3` <dbl>, `20002-2.0` <dbl>, `20002-2.3` <dbl>, #> #   `20006-0.0` <dbl>, `20006-0.3` <dbl>, `20006-2.0` <dbl>, `20006-2.3` <dbl>, #> #   `20008-0.0` <dbl>, `20008-0.3` <dbl>, `20008-2.0` <dbl>, ‚Ä¶"},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"create-data-dictionary","dir":"Articles","previous_headings":"Basic workflow","what":"1. Create data dictionary","title":"ukbwranglr","text":"First download copy UK Biobank data dictionary codings files UK Biobank data showcase website. Dummy versions used : create data dictionary using make_data_dict():","code":"# get required metadata ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\") # make data dictionary data_dict <- make_data_dict(ukb_main_path,                              ukb_data_dict = ukb_data_dict)  data_dict #> # A tibble: 71 √ó 22 #>    descriptive_colnames     colheaders_raw colheaders_processed FieldID instance #>    <chr>                    <chr>          <chr>                <chr>   <chr>    #>  1 eid                      eid            feid                 eid     NA       #>  2 sex_f31_0_0              31-0.0         f31_0_0              31      0        #>  3 year_of_birth_f34_0_0    34-0.0         f34_0_0              34      0        #>  4 month_of_birth_f52_0_0   52-0.0         f52_0_0              52      0        #>  5 ethnic_background_f2100‚Ä¶ 21000-0.0      f21000_0_0           21000   0        #>  6 ethnic_background_f2100‚Ä¶ 21000-1.0      f21000_1_0           21000   1        #>  7 ethnic_background_f2100‚Ä¶ 21000-2.0      f21000_2_0           21000   2        #>  8 body_mass_index_bmi_f21‚Ä¶ 21001-0.0      f21001_0_0           21001   0        #>  9 body_mass_index_bmi_f21‚Ä¶ 21001-1.0      f21001_1_0           21001   1        #> 10 body_mass_index_bmi_f21‚Ä¶ 21001-2.0      f21001_2_0           21001   2        #> # ‚Ñπ 61 more rows #> # ‚Ñπ 17 more variables: array <chr>, Path <chr>, Category <chr>, Field <chr>, #> #   Participants <chr>, Items <chr>, Stability <chr>, ValueType <chr>, #> #   Units <chr>, ItemType <chr>, Strata <chr>, Sexed <chr>, Instances <chr>, #> #   Array <chr>, Coding <chr>, Notes <chr>, Link <chr>"},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"read-selected-variables-into-r","dir":"Articles","previous_headings":"Basic workflow","what":"2. Read selected variables into R","title":"ukbwranglr","text":"Read main UK Biobank dataset R using read_ukb(): UK Biobank main dataset file typically large fit memory personal computer. Often however, subset data required. read selection variables, filter data dictionary created make_data_dict() subset variables supply read_ukb():2","code":"read_ukb(path = ukb_main_path,          ukb_data_dict = ukb_data_dict,          ukb_codings = ukb_codings) %>%    # (convert to tibble for concise print method)   as_tibble() #> Creating data dictionary #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 10 √ó 71 #>      eid sex_f31_0_0 year_of_birth_f34_0_0 month_of_birth_f52_0_0 #>    <int> <fct>                       <int> <fct>                  #>  1     1 Female                       1952 August                 #>  2     2 Female                       1946 March                  #>  3     3 Male                         1951 April                  #>  4     4 Female                       1956 September              #>  5     5 NA                             NA April                  #>  6     6 Male                         1948 February               #>  7     7 Female                       1949 December               #>  8     8 Male                         1956 October                #>  9     9 Female                       1962 April                  #> 10    10 Male                         1953 February               #> # ‚Ñπ 67 more variables: ethnic_background_f21000_0_0 <fct>, #> #   ethnic_background_f21000_1_0 <fct>, ethnic_background_f21000_2_0 <fct>, #> #   body_mass_index_bmi_f21001_0_0 <dbl>, body_mass_index_bmi_f21001_1_0 <dbl>, #> #   body_mass_index_bmi_f21001_2_0 <dbl>, #> #   systolic_blood_pressure_automated_reading_f4080_0_0 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_1 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_2 <int>, ‚Ä¶ # Filter data dictionary for sex, year of birth, body mass index, systolic blood pressure, self-reported non-cancer illness and summary hospital diagnoses (ICD10) fields data_dict_selected <- data_dict %>%   filter(FieldID %in% c(     # Participant ID     \"eid\",          # Sex     \"31\",          # Year of birth     \"34\",          # Body mass index     \"21001\",          # Systolic blood pressure     \"4080\",          # Self-reported non-cancer medical conditions     \"20002\",     \"20008\",          # Summary hospital diagnoses (ICD10)     \"41270\",     \"41280\"   ))  # Read selected variables into R ukb_main <- read_ukb(path = ukb_main_path,          data_dict = data_dict_selected,          ukb_data_dict = ukb_data_dict,          ukb_codings = ukb_codings) #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds.  # Convert to tibble for concise print method as_tibble(ukb_main) #> # A tibble: 10 √ó 26 #>      eid sex_f31_0_0 year_of_birth_f34_0_0 body_mass_index_bmi_f21001_0_0 #>    <int> <fct>                       <int>                          <dbl> #>  1     1 Female                       1952                           20.1 #>  2     2 Female                       1946                           30.2 #>  3     3 Male                         1951                           22.8 #>  4     4 Female                       1956                           NA   #>  5     5 NA                             NA                           29.3 #>  6     6 Male                         1948                           28.3 #>  7     7 Female                       1949                           NA   #>  8     8 Male                         1956                           NA   #>  9     9 Female                       1962                           25.4 #> 10    10 Male                         1953                           NA   #> # ‚Ñπ 22 more variables: body_mass_index_bmi_f21001_1_0 <dbl>, #> #   body_mass_index_bmi_f21001_2_0 <dbl>, #> #   systolic_blood_pressure_automated_reading_f4080_0_0 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_1 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_2 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_3 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_1_0 <int>, ‚Ä¶"},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"summarise-continuous-variables","dir":"Articles","previous_headings":"Basic workflow","what":"3. Summarise continuous variables","title":"ukbwranglr","text":"variables body mass index systolic blood pressure measured one occasion. cases may desirable calculate summary value (e.g.¬†mean). Use summarise_numerical_variables():","code":"# calculate the mean value across all repeated continuous variable measurements ukb_main_numerical_vars_summarised <- summarise_numerical_variables(   ukb_main = ukb_main,   ukb_data_dict = ukb_data_dict,   summary_function = \"mean\",    .drop = TRUE ) %>%    # reorder variables   select(eid,          sex_f31_0_0,          year_of_birth_f34_0_0,          mean_body_mass_index_bmi_x21001,          mean_systolic_blood_pressure_automated_reading_x4080) #> Number of summary columns to make: 3 #> Time taken: 0 minutes, 0 seconds.  as_tibble(ukb_main_numerical_vars_summarised) #> # A tibble: 10 √ó 5 #>      eid sex_f31_0_0 year_of_birth_f34_0_0 mean_body_mass_index_bmi_x21001 #>    <int> <fct>                       <int>                           <dbl> #>  1     1 Female                       1952                            20.5 #>  2     2 Female                       1946                            26.0 #>  3     3 Male                         1951                            25.8 #>  4     4 Female                       1956                           NaN   #>  5     5 NA                             NA                            21.2 #>  6     6 Male                         1948                            28.6 #>  7     7 Female                       1949                           NaN   #>  8     8 Male                         1956                           NaN   #>  9     9 Female                       1962                            23.9 #> 10    10 Male                         1953                            27.6 #> # ‚Ñπ 1 more variable: mean_systolic_blood_pressure_automated_reading_x4080 <dbl>"},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"tidy-clinical-events-data-and-extract-outcomes-of-interest","dir":"Articles","previous_headings":"Basic workflow","what":"4. Tidy clinical events data and extract outcomes of interest","title":"ukbwranglr","text":"Use tidy_clinical_events() reshape clinical events fields (self-reported non-cancer medical conditions) long format: identify participants condition interest, first decide codes capture . example, following includes (non-exhaustive) list clinical codes diabetes:3 Supply extract_phenotypes() filter participants matching clinical codes records. default, earliest date extracted:","code":"# tidy clinical events clinical_events <- tidy_clinical_events(   ukb_main = ukb_main,    ukb_data_dict = ukb_data_dict,    ukb_codings = ukb_codings,   clinical_events_sources = c(\"self_report_non_cancer\",                               \"summary_hes_icd10\") ) #> Tidying clinical events for self_report_non_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd10 #> Time taken: 0 minutes, 0 seconds.  # returns a named list of data frames clinical_events #> $self_report_non_cancer #>      eid source  index   code       date #>    <int> <char> <char> <char>     <char> #> 1:     1 f20002    0_0   1665 1998-12-24 #> 2:     2 f20002    0_0   1383 2011-01-05 #> 3:     3 f20002    0_0   1665       <NA> #> 4:     4 f20002    0_0   1383       <NA> #> 5:     1 f20002    0_3   1223 2003-02-25 #> 6:     2 f20002    0_3   1352 2020-07-02 #> 7:     1 f20002    2_0   1514 2011-04-07 #> 8:     2 f20002    2_0   1447 1981-03-01 #> 9:     2 f20002    2_3   1165 1983-01-03 #>  #> $summary_hes_icd10 #>      eid source  index   code       date #>    <int> <char> <char> <char>     <char> #> 1:     1 f41270    0_0   X715 1955-11-12 #> 2:     2 f41270    0_0    E11 1939-02-16 #> 3:     1 f41270    0_3    E10 1910-02-19 #> 4:     2 f41270    0_3  M0087 1965-08-08  # combine with dplyr clinical_events <- dplyr::bind_rows(clinical_events)  clinical_events #>       eid source  index   code       date #>     <int> <char> <char> <char>     <char> #>  1:     1 f20002    0_0   1665 1998-12-24 #>  2:     2 f20002    0_0   1383 2011-01-05 #>  3:     3 f20002    0_0   1665       <NA> #>  4:     4 f20002    0_0   1383       <NA> #>  5:     1 f20002    0_3   1223 2003-02-25 #>  6:     2 f20002    0_3   1352 2020-07-02 #>  7:     1 f20002    2_0   1514 2011-04-07 #>  8:     2 f20002    2_0   1447 1981-03-01 #>  9:     2 f20002    2_3   1165 1983-01-03 #> 10:     1 f41270    0_0   X715 1955-11-12 #> 11:     2 f41270    0_0    E11 1939-02-16 #> 12:     1 f41270    0_3    E10 1910-02-19 #> 13:     2 f41270    0_3  M0087 1965-08-08 example_clinical_codes() #> # A tibble: 8 √ó 6 #>   disease  description                           category code_type code  author #>   <chr>    <chr>                                 <chr>    <chr>     <chr> <chr>  #> 1 Diabetes diabetes                              Diabete‚Ä¶ data_cod‚Ä¶ 1220  ukbwr  #> 2 Diabetes gestational diabetes                  Gestati‚Ä¶ data_cod‚Ä¶ 1221  ukbwr  #> 3 Diabetes type 1 diabetes                       Type 1 ‚Ä¶ data_cod‚Ä¶ 1222  ukbwr  #> 4 Diabetes type 2 diabetes                       Type 2 ‚Ä¶ data_cod‚Ä¶ 1223  ukbwr  #> 5 Diabetes Type 1 diabetes mellitus              Type 1 ‚Ä¶ icd10     E10   ukbwr  #> 6 Diabetes Type 2 diabetes mellitus              Type 2 ‚Ä¶ icd10     E11   ukbwr  #> 7 Diabetes Insulin dependent diabetes mellitus   Type 1 ‚Ä¶ read2     C108. ukbwr  #> 8 Diabetes Non-insulin dependent diabetes melli‚Ä¶ Type 2 ‚Ä¶ read2     C109. ukbwr # extract phenotypes diabetes_cases <- extract_phenotypes(clinical_events = clinical_events,                                      clinical_codes = example_clinical_codes()) #> Filtering for requested clinical codes/sources #> Joining filtered events with clinical codelist #> Time taken: 0 minutes, 0 seconds.  diabetes_cases #>      eid source  index   code       date     code_type  disease  category #>    <int> <char> <char> <char>     <char>        <char>   <char>    <char> #> 1:     1 f20002    0_3   1223 2003-02-25 data_coding_6 Diabetes Type 2 DM #> 2:     2 f41270    0_0    E11 1939-02-16         icd10 Diabetes Type 2 DM #> 3:     1 f41270    0_3    E10 1910-02-19         icd10 Diabetes Type 1 DM #>    author #>    <char> #> 1:  ukbwr #> 2:  ukbwr #> 3:  ukbwr"},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"analyse","dir":"Articles","previous_headings":"Basic workflow","what":"5. Analyse","title":"ukbwranglr","text":"Merge output steps 4 5: Describe:","code":"ukb_main_processed <-   # first summarise `diabetes_cases` - for each eid, get the earliest date   diabetes_cases %>%   group_by(eid,            disease) %>%   summarise(diabetes_min_date = min(date, na.rm = TRUE)) %>%   ungroup() %>%      # create indicator column for diabetes   mutate(diabetes_indicator = case_when(!is.na(diabetes_min_date) ~ \"Yes\",                                         TRUE ~ \"No\")) %>%      # join with `ukb_main_numerical_vars_summarised`   dplyr::full_join(ukb_main_numerical_vars_summarised,                    by = \"eid\") #> `summarise()` has grouped output by 'eid'. You can override using the `.groups` #> argument.  ukb_main_processed #> # A tibble: 10 √ó 8 #>      eid disease  diabetes_min_date diabetes_indicator sex_f31_0_0 #>    <int> <chr>    <chr>             <chr>              <fct>       #>  1     1 Diabetes 1910-02-19        Yes                Female      #>  2     2 Diabetes 1939-02-16        Yes                Female      #>  3     3 NA       NA                NA                 Male        #>  4     4 NA       NA                NA                 Female      #>  5     5 NA       NA                NA                 NA          #>  6     6 NA       NA                NA                 Male        #>  7     7 NA       NA                NA                 Female      #>  8     8 NA       NA                NA                 Male        #>  9     9 NA       NA                NA                 Female      #> 10    10 NA       NA                NA                 Male        #> # ‚Ñπ 3 more variables: year_of_birth_f34_0_0 <int>, #> #   mean_body_mass_index_bmi_x21001 <dbl>, #> #   mean_systolic_blood_pressure_automated_reading_x4080 <dbl> ukb_main_processed %>%   select(-eid) %>%   group_by(diabetes_indicator) %>%   summarise(pct_female = sum(sex_f31_0_0 == \"Female\", na.rm = TRUE) / n(),             across(where(is.numeric), ~ mean(.x, na.rm = TRUE))) #> # A tibble: 2 √ó 5 #>   diabetes_indicator pct_female year_of_birth_f34_0_0 mean_body_mass_index_bmi‚Ä¶¬π #>   <chr>                   <dbl>                 <dbl>                      <dbl> #> 1 Yes                     1                     1949                        23.2 #> 2 NA                      0.375                 1954.                       25.4 #> # ‚Ñπ abbreviated name: ¬π‚Äãmean_body_mass_index_bmi_x21001 #> # ‚Ñπ 1 more variable: mean_systolic_blood_pressure_automated_reading_x4080 <dbl>"},{"path":"https://rmgpanw.github.io/ukbwranglr/articles/ukbwranglr.html","id":"setup-for-multiple-projects","dir":"Articles","previous_headings":"","what":"Setup for multiple projects","title":"ukbwranglr","text":"following setup recommended reduce duplicated steps multiple projects draw datasets: Download UK Biobank data dictionary codings files (available UK Biobank data showcase) new R project, place following .Renviron file project root directory (replacing PATH/correct file paths): Functions arguments ukb_data_dict ukb_codings use get_ukb_data_dict() get_ukb_codings() default, automatically search environmental variables UKB_DATA_DICT UKB_CODINGS read files locations. Create clinical events database using make_clinical_events_db(). function includes option incorporate primary care data.4 connected database, phenotypes may extracted extract_phenotypes():","code":"UKB_DATA_DICT=/PATH/TO/Data_Dictionary_Showcase.tsv  UKB_CODINGS=/PATH/TO/Codings.tsv # build dummy clinical events SQLite DB in tempdir ukb_db_path <- tempfile(fileext = \".db\")  make_clinical_events_db(ukb_main_path = ukb_main_path,                         ukb_db_path = ukb_db_path,                          gp_clinical_path = get_ukb_dummy(\"dummy_gp_clinical.txt\",                                                          path_only = TRUE),                         gp_scripts_path = get_ukb_dummy(\"dummy_gp_scripts.txt\",                                                          path_only = TRUE),                          ukb_data_dict = ukb_data_dict,                         ukb_codings = ukb_codings) # Connect to the database con <- DBI::dbConnect(RSQLite::SQLite(),                        ukb_db_path)  # Convert to a named list of dbplyr::tbl_dbi objects ukbdb <- ukbwranglr::db_tables_to_list(con)  # Value columns (from `gp_clinical.txt`) and prescription names/quantities (from `gp_scripts.txt`) are stored separately from the main `clinical_events` table ukbdb #> $clinical_events #> # Source:   table<`clinical_events`> [?? x 5] #> # Database: sqlite 3.45.2 [/tmp/RtmpNoleal/file55e02bbba532.db] #>      eid source index code       date       #>    <int> <chr>  <chr> <chr>      <chr>      #>  1     1 f40001 0_0   X095       1917-10-08 #>  2     2 f40001 0_0   A162       1955-02-11 #>  3     1 f40001 1_0   X095       1910-02-19 #>  4     2 f40001 1_0   A162       1965-08-08 #>  5     1 f40002 0_0   W192       1917-10-08 #>  6     2 f40002 0_0   V374       1955-02-11 #>  7     1 f40002 1_3   X715       1910-02-19 #>  8     1 f20003 0_0   1140861958 1955-02-11 #>  9     2 f20003 0_0   1141146234 1965-08-08 #> 10     1 f20003 2_0   1141146188 1910-02-19 #> # ‚Ñπ more rows #>  #> $gp_clinical_values #> # Source:   table<`gp_clinical_values`> [?? x 4] #> # Database: sqlite 3.45.2 [/tmp/RtmpNoleal/file55e02bbba532.db] #>    index value1 value2 value3 #>    <chr> <chr>  <chr>  <chr>  #>  1 1     1      2      3      #>  2 2     1      2      3      #>  3 3     1      2      3      #>  4 4     1      2      3      #>  5 5     1      2      3      #>  6 6     1      2      3      #>  7 7     NA     NA     NA     #>  8 8     NA     NA     NA     #>  9 9     NA     NA     NA     #> 10 10    NA     NA     NA     #> # ‚Ñπ more rows #>  #> $gp_scripts_names_and_quantities #> # Source:   table<`gp_scripts_names_and_quantities`> [6 x 3] #> # Database: sqlite 3.45.2 [/tmp/RtmpNoleal/file55e02bbba532.db] #>   index drug_name quantity #>   <chr> <chr>     <chr>    #> 1 1     drug2     50       #> 2 2     NA        NA       #> 3 3     drug2     30       #> 4 4     drug2     30       #> 5 5     drug2     30       #> 6 6     2         30 # extract phenotypes diabetes_cases <-   extract_phenotypes(clinical_events = ukbdb$clinical_events,                      clinical_codes = example_clinical_codes(),                      verbose = FALSE)  diabetes_cases #> # A tibble: 8 √ó 9 #>     eid source       index code  date       code_type    disease category author #>   <int> <chr>        <chr> <chr> <chr>      <chr>        <chr>   <chr>    <chr>  #> 1     1 f20002       0_3   1223  2003-02-25 data_coding‚Ä¶ Diabet‚Ä¶ Type 2 ‚Ä¶ ukbwr  #> 2     1 gpc1_r2      7     C108. 1990-10-01 read2        Diabet‚Ä¶ Type 1 ‚Ä¶ ukbwr  #> 3     1 gpc1_r2      11    C108. 1990-10-03 read2        Diabet‚Ä¶ Type 1 ‚Ä¶ ukbwr  #> 4     2 gpc2_r2      8     C109. 1990-10-02 read2        Diabet‚Ä¶ Type 2 ‚Ä¶ ukbwr  #> 5     2 gpc2_r2      12    C109. 1990-10-04 read2        Diabet‚Ä¶ Type 2 ‚Ä¶ ukbwr  #> 6     1 f41270       0_3   E10   1910-02-19 icd10        Diabet‚Ä¶ Type 1 ‚Ä¶ ukbwr  #> 7     1 f20002_icd10 0_3   E11   2003-02-25 icd10        Diabet‚Ä¶ Type 2 ‚Ä¶ ukbwr  #> 8     2 f41270       0_0   E11   1939-02-16 icd10        Diabet‚Ä¶ Type 2 ‚Ä¶ ukbwr"},{"path":"https://rmgpanw.github.io/ukbwranglr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alasdair Warwick. Author, maintainer.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warwick (2022). ukbwranglr: Functions load wrangle UK Biobank data. https://rmgpanw.github.io/ukbwranglr/, https://github.com/rmgpanw/ukbwranglr.","code":"@Manual{,   title = {ukbwranglr: Functions to load and wrangle UK Biobank data},   author = {Alasdair Warwick},   year = {2022}, }"},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Exploring UKB Data","text":"goal ukbwranglr facilitate analysing UK Biobank data, including: Reading selection UK Biobank variables R. Summarising repeated continuous variable measurements.1 Extracting phenotypic outcomes interest clinical events data.2","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Exploring UKB Data","text":"can install development version ukbwranglr :","code":"# install.packages(\"devtools\") devtools::install_github(\"rmgpanw/ukbwranglr\")"},{"path":"https://rmgpanw.github.io/ukbwranglr/index.html","id":"basic-workflow","dir":"","previous_headings":"","what":"Basic workflow","title":"Exploring UKB Data","text":"basic workflow follows: Create data dictionary main UK Biobank dataset make_data_dict(). Read selected variables R read_ukb(). Summarise continuous variables summarise_numerical_variables(). Tidy clinical events data tidy_clinical_events() make_clinical_events_db(), extract outcomes interest extract_phenotypes(). Analyse. Please see vignette('ukbwranglr') details.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/clinical_events_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Details for UK Biobank clinical events data ‚Äî clinical_events_sources","title":"Details for UK Biobank clinical events data ‚Äî clinical_events_sources","text":"Returns data frame details clinical events data may tidied tidy_clinical_events().","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/clinical_events_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Details for UK Biobank clinical events data ‚Äî clinical_events_sources","text":"","code":"clinical_events_sources()"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/clinical_events_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Details for UK Biobank clinical events data ‚Äî clinical_events_sources","text":"data frame","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/clinical_events_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Details for UK Biobank clinical events data ‚Äî clinical_events_sources","text":"","code":"clinical_events_sources() #> # A tibble: 23 √ó 5 #>    source       data_coding   description                         category file  #>    <chr>        <chr>         <chr>                               <chr>    <chr> #>  1 f40001       icd10         Underlying (primary) cause of death Death r‚Ä¶ ukb_‚Ä¶ #>  2 f40002       icd10         Contributory (secondary) cause of ‚Ä¶ Death r‚Ä¶ ukb_‚Ä¶ #>  3 f20002       data_coding_6 Non-cancer illness code, self-repo‚Ä¶ Medical‚Ä¶ ukb_‚Ä¶ #>  4 f20002_icd10 icd10         Non-cancer illness code, self-repo‚Ä¶ Medical‚Ä¶ ukb_‚Ä¶ #>  5 f20001       data_coding_3 Cancer code, self-reported          Medical‚Ä¶ ukb_‚Ä¶ #>  6 f20004       data_coding_5 Operation code, self-reported       Operati‚Ä¶ ukb_‚Ä¶ #>  7 f40013       icd9          Type of cancer: ICD9                Cancer ‚Ä¶ ukb_‚Ä¶ #>  8 f40006       icd10         Type of cancer: ICD10               Cancer ‚Ä¶ ukb_‚Ä¶ #>  9 f41270       icd10         Diagnoses - ICD10                   Summary‚Ä¶ ukb_‚Ä¶ #> 10 f41271       icd9          Diagnoses - ICD9                    Summary‚Ä¶ ukb_‚Ä¶ #> # ‚Ñπ 13 more rows"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"convenience function returns list tbl_dbi objects DBIConnection object, named per database table names.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"","code":"db_tables_to_list(conn)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"conn DBIConnection object, returned dbConnect.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"named list tbl_dbi objects","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"See introduction dbplyr vignette getting started databases dplyr.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/db_tables_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a named list of tbl_dbi objects from a DBIConnection object ‚Äî db_tables_to_list","text":"","code":"# create an SQLite database in memory con <- DBI::dbConnect(RSQLite::SQLite(), dbname = \":memory:\")  # populate with tables dplyr::copy_to(con, head(iris), \"iris_head\") dplyr::copy_to(con, head(mtcars), \"mtcars_head\")  # create named list of tbl_dbi objects db_tables <- db_tables_to_list(con)  # view tables db_tables$iris_head #> # Source:   table<`iris_head`> [6 x 5] #> # Database: sqlite 3.45.2 [:memory:] #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>          <dbl>       <dbl>        <dbl>       <dbl> <chr>   #> 1          5.1         3.5          1.4         0.2 setosa  #> 2          4.9         3            1.4         0.2 setosa  #> 3          4.7         3.2          1.3         0.2 setosa  #> 4          4.6         3.1          1.5         0.2 setosa  #> 5          5           3.6          1.4         0.2 setosa  #> 6          5.4         3.9          1.7         0.4 setosa  db_tables$mtcars_head #> # Source:   table<`mtcars_head`> [6 x 11] #> # Database: sqlite 3.45.2 [:memory:] #>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21       6   160   110  3.9   2.62  16.5     0     1     4     4 #> 2  21       6   160   110  3.9   2.88  17.0     0     1     4     4 #> 3  22.8     4   108    93  3.85  2.32  18.6     1     1     4     1 #> 4  21.4     6   258   110  3.08  3.22  19.4     1     0     3     1 #> 5  18.7     8   360   175  3.15  3.44  17.0     0     0     3     2 #> 6  18.1     6   225   105  2.76  3.46  20.2     1     0     3     1  # to import to R, use dplyr::collect() dplyr::collect(db_tables$iris_head) #> # A tibble: 6 √ó 5 #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>          <dbl>       <dbl>        <dbl>       <dbl> <chr>   #> 1          5.1         3.5          1.4         0.2 setosa  #> 2          4.9         3            1.4         0.2 setosa  #> 3          4.7         3.2          1.3         0.2 setosa  #> 4          4.6         3.1          1.5         0.2 setosa  #> 5          5           3.6          1.4         0.2 setosa  #> 6          5.4         3.9          1.7         0.4 setosa"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_dob.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive an estimated participant date of birth ‚Äî derive_dob","title":"Derive an estimated participant date of birth ‚Äî derive_dob","text":"Estimates dates birth year month birth (Field IDs 34 52 respectively) first date month.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_dob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive an estimated participant date of birth ‚Äî derive_dob","text":"","code":"derive_dob(   ukb_main,   ukb_data_dict = get_ukb_data_dict(),   .drop = FALSE,   .details_only = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_dob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive an estimated participant date of birth ‚Äî derive_dob","text":"ukb_main UK Biobank main dataset. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. .drop TRUE, remove required input columns result .details_only TRUE, return list containing details required input variables (Field IDs) derived variables (new column name, label values/value labels).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_dob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive an estimated participant date of birth ‚Äî derive_dob","text":"data frame column called dob (type character).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_dob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive an estimated participant date of birth ‚Äî derive_dob","text":"","code":"ukb_main <- data.frame(eid = 1, f34_0_0 = 1990, f52_0_0 = 1) # dummy UKB data dictionary dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\")  # keep input year/month of birth columns derive_dob(ukb_main,   ukb_data_dict = dummy_ukb_data_dict ) #>   eid f34_0_0 f52_0_0        dob #> 1   1    1990       1 1990-01-01  # remove input year/month of birth columns derive_dob(ukb_main,   ukb_data_dict = dummy_ukb_data_dict,   .drop = TRUE ) #>   eid        dob #> 1   1 1990-01-01"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"Simplifies ethnic background UK Biobank main dataset main categories Field ID 21000.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"","code":"derive_ethnic_background_simplified(   ukb_main,   ukb_data_dict = get_ukb_data_dict(),   ethnicity_levels = c(\"White\", \"Mixed\", \"Asian or Asian British\",     \"Black or Black British\", \"Chinese\", \"Other ethnic group\"),   .drop = FALSE,   .details_only = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"ukb_main UK Biobank main dataset. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. ethnicity_levels factor level order appended ethnic_background_simplified column. default, baseline level set \"White\" ethnicity. .drop TRUE, remove required input columns result .details_only TRUE, return list containing details required input variables (Field IDs) derived variables (new column name, label values/value labels).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"data frame column called ethnic_background_simplified (type factor).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"Categories \"know\" \"Prefer answer\" converted NA. new column called ethnic_background_simplified type factor appended input data frame. default, \"White\" ethnicity set baseline level largest category. Levels can explicitly specified using ethnicity_levels argument.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/derive_ethnic_background_simplified.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive simplified ethnic background ‚Äî derive_ethnic_background_simplified","text":"","code":"library(magrittr) # dummy UKB data and data dictionary dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  dummy_ukb_main <- read_ukb(   path = get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE),   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) #> Creating data dictionary #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds.  # derive ethnic background derive_ethnic_background_simplified(   ukb_main = dummy_ukb_main,   ukb_data_dict = dummy_ukb_data_dict ) %>%   dplyr::select(tidyselect::contains(\"ethnic\")) #>     ethnic_background_f21000_0_0 ethnic_background_f21000_1_0 #>                           <fctr>                       <fctr> #>  1:                  Do not know                        Mixed #>  2:         Prefer not to answer    White and Black Caribbean #>  3:                        White      White and Black African #>  4:                      British              White and Asian #>  5:                        Irish   Any other mixed background #>  6:   Any other white background       Asian or Asian British #>  7:                         <NA>                       Indian #>  8:                         <NA>                      Chinese #>  9:                    Caribbean                         <NA> #> 10:                    Caribbean                         <NA> #>     ethnic_background_f21000_2_0 ethnic_background_simplified #>                           <fctr>                       <fctr> #>  1:                  Bangladeshi                        Mixed #>  2:   Any other Asian background                        Mixed #>  3:                  Do not know                        White #>  4:                    Caribbean                        White #>  5:                      African                        White #>  6:   Any other Black background                        White #>  7:                      Chinese       Asian or Asian British #>  8:                         <NA>                      Chinese #>  9:                         <NA>       Black or Black British #> 10:                         <NA>       Black or Black British"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/example_clinical_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an example data frame of clinical codes for diabetes ‚Äî example_clinical_codes","title":"Generate an example data frame of clinical codes for diabetes ‚Äî example_clinical_codes","text":"Data frames format may used extract_phenotypes. Use validate_clinical_codes check whether clinical codes data frame meets requirements.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/example_clinical_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an example data frame of clinical codes for diabetes ‚Äî example_clinical_codes","text":"","code":"example_clinical_codes()"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/example_clinical_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an example data frame of clinical codes for diabetes ‚Äî example_clinical_codes","text":"data frame selected clinical codes (non-exhaustive) diabetes.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/example_clinical_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an example data frame of clinical codes for diabetes ‚Äî example_clinical_codes","text":"","code":"example_clinical_codes() #> # A tibble: 8 √ó 6 #>   disease  description                           category code_type code  author #>   <chr>    <chr>                                 <chr>    <chr>     <chr> <chr>  #> 1 Diabetes diabetes                              Diabete‚Ä¶ data_cod‚Ä¶ 1220  ukbwr  #> 2 Diabetes gestational diabetes                  Gestati‚Ä¶ data_cod‚Ä¶ 1221  ukbwr  #> 3 Diabetes type 1 diabetes                       Type 1 ‚Ä¶ data_cod‚Ä¶ 1222  ukbwr  #> 4 Diabetes type 2 diabetes                       Type 2 ‚Ä¶ data_cod‚Ä¶ 1223  ukbwr  #> 5 Diabetes Type 1 diabetes mellitus              Type 1 ‚Ä¶ icd10     E10   ukbwr  #> 6 Diabetes Type 2 diabetes mellitus              Type 2 ‚Ä¶ icd10     E11   ukbwr  #> 7 Diabetes Insulin dependent diabetes mellitus   Type 1 ‚Ä¶ read2     C108. ukbwr  #> 8 Diabetes Non-insulin dependent diabetes melli‚Ä¶ Type 2 ‚Ä¶ read2     C109. ukbwr"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/extract_phenotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","title":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","text":"Filters clinical events table created tidy_clinical_events set clinical codes represent one phenotypes.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/extract_phenotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","text":"","code":"extract_phenotypes(   clinical_events,   clinical_codes,   source_filter = NULL,   verbose = TRUE )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/extract_phenotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","text":"clinical_events long format data frame created tidy_clinical_events, tidy_gp_clinical, tidy_gp_scripts make_clinical_events_db. can also tbl_dbi object. clinical_codes data frame. Must match format per example_clinical_codes. source_filter Character vector data sources filter (optional). verbose TRUE (default), display progress messages.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/extract_phenotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","text":"data frame.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/extract_phenotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract phenotypes from clinical events data ‚Äî extract_phenotypes","text":"","code":"library(magrittr)  # dummy clinical events data frame dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  dummy_clinical_events <- read_ukb(   path = get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE),   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) %>%   tidy_clinical_events(     ukb_data_dict = dummy_ukb_data_dict,     ukb_codings = dummy_ukb_codings   ) %>%   dplyr::bind_rows() #> Creating data dictionary #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for primary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for secondary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_medication #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_operation #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs3 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs4 #> Time taken: 0 minutes, 0 seconds.  head(dummy_clinical_events) #>      eid source  index   code       date #>    <int> <char> <char> <char>     <char> #> 1:     1 f40001    0_0   X095 1917-10-08 #> 2:     2 f40001    0_0   A162 1955-02-11 #> 3:     1 f40001    1_0   X095 1910-02-19 #> 4:     2 f40001    1_0   A162 1965-08-08 #> 5:     1 f40002    0_0   W192 1917-10-08 #> 6:     2 f40002    0_0   V374 1955-02-11  # dummy clinical code list example_clinical_codes() #> # A tibble: 8 √ó 6 #>   disease  description                           category code_type code  author #>   <chr>    <chr>                                 <chr>    <chr>     <chr> <chr>  #> 1 Diabetes diabetes                              Diabete‚Ä¶ data_cod‚Ä¶ 1220  ukbwr  #> 2 Diabetes gestational diabetes                  Gestati‚Ä¶ data_cod‚Ä¶ 1221  ukbwr  #> 3 Diabetes type 1 diabetes                       Type 1 ‚Ä¶ data_cod‚Ä¶ 1222  ukbwr  #> 4 Diabetes type 2 diabetes                       Type 2 ‚Ä¶ data_cod‚Ä¶ 1223  ukbwr  #> 5 Diabetes Type 1 diabetes mellitus              Type 1 ‚Ä¶ icd10     E10   ukbwr  #> 6 Diabetes Type 2 diabetes mellitus              Type 2 ‚Ä¶ icd10     E11   ukbwr  #> 7 Diabetes Insulin dependent diabetes mellitus   Type 1 ‚Ä¶ read2     C108. ukbwr  #> 8 Diabetes Non-insulin dependent diabetes melli‚Ä¶ Type 2 ‚Ä¶ read2     C109. ukbwr   # Filter for participants with matching clinical codes extract_phenotypes(   clinical_events = dummy_clinical_events,   clinical_codes = example_clinical_codes() ) #> Filtering for requested clinical codes/sources #> Joining filtered events with clinical codelist #> Time taken: 0 minutes, 0 seconds. #>      eid       source  index   code       date     code_type  disease  category #>    <int>       <char> <char> <char>     <char>        <char>   <char>    <char> #> 1:     1       f20002    0_3   1223 2003-02-25 data_coding_6 Diabetes Type 2 DM #> 2:     1 f20002_icd10    0_3    E11 2003-02-25         icd10 Diabetes Type 2 DM #> 3:     2       f41270    0_0    E11 1939-02-16         icd10 Diabetes Type 2 DM #> 4:     1       f41270    0_3    E10 1910-02-19         icd10 Diabetes Type 1 DM #>    author #>    <char> #> 1:  ukbwr #> 2:  ukbwr #> 3:  ukbwr #> 4:  ukbwr"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the UK Biobank codings file ‚Äî get_ukb_codings","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"Reads UK Biobank codings file R columns type character.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"","code":"get_ukb_codings(path = NULL)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"path Either NULL, file path. file exists path, downloaded directly UK Biobank data showcase website location function first called.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"data frame.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"default, attempt made read file path specified environmental variable named UKB_CODINGS (see vignette('ukbwranglr') details), variable found data dictionary downloaded directly UK Biobank website tempdir() function first called.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_codings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the UK Biobank codings file ‚Äî get_ukb_codings","text":"","code":"get_ukb_data_dict(   get_ukb_dummy(\"dummy_Codings.tsv\", path_only = TRUE) ) #>      Coding  Value #>      <char> <char> #>   1:      8      1 #>   2:      8     10 #>   3:      8     11 #>   4:      8     12 #>   5:      8      2 #>  ---               #> 421:    240   H011 #> 422:    240   H013 #> 423:    240   H018 #> 424:    240   H019 #> 425:    240   H022 #>                                                             Meaning #>                                                              <char> #>   1:                                                        January #>   2:                                                        October #>   3:                                                       November #>   4:                                                       December #>   5:                                                       February #>  ---                                                                #> 421: H01.1 Emergency excision of abnormal appendix and drainage HFQ #> 422:                    H01.3 Emergency excision of normal appendix #> 423:           H01.8 Other specified emergency excision of appendix #> 424:               H01.9 Unspecified emergency excision of appendix #> 425:                       H02.2 Planned delayed appendicectomy NEC"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"Reads UK Biobank data dictionary R columns type character.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"","code":"get_ukb_data_dict(path = NULL)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"path Either NULL, file path. file exists path, downloaded directly UK Biobank data showcase website location function first called.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"data frame.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"default, attempt made read file path specified environmental variable named UKB_DATA_DICT (see vignette('ukbwranglr') details), variable found data dictionary downloaded directly UK Biobank website tempdir() function first called.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_data_dict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the UK Biobank data dictionary ‚Äî get_ukb_data_dict","text":"","code":"get_ukb_data_dict(   get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\", path_only = TRUE) ) #>                                                                           Path #>                                                                         <char> #>  1:                      Population characteristics > Baseline characteristics #>  2:                      Population characteristics > Baseline characteristics #>  3:                      Population characteristics > Baseline characteristics #>  4:                                Assessment Centre > Recruitment > Reception #>  5:                     Assessment Centre > Physical measures > Blood pressure #>  6:                  Assessment Centre > Verbal interview > Medical conditions #>  7:                  Assessment Centre > Verbal interview > Medical conditions #>  8:                         Assessment Centre > Verbal interview > Medications #>  9:                          Assessment Centre > Verbal interview > Operations #> 10:                  Assessment Centre > Verbal interview > Medical conditions #> 11:                  Assessment Centre > Verbal interview > Medical conditions #> 12:                          Assessment Centre > Verbal interview > Operations #> 13:            Assessment Centre > Touchscreen > Sociodemographics > Ethnicity #> 14: Assessment Centre > Physical measures > Anthropometry > Body size measures #> 15:                                   Health-related outcomes > Death register #> 16:                                   Health-related outcomes > Death register #> 17:                                   Health-related outcomes > Death register #> 18:                                  Health-related outcomes > Cancer register #> 19:                                  Health-related outcomes > Cancer register #> 20:                                  Health-related outcomes > Cancer register #> 21:           Health-related outcomes > Hospital inpatient > Summary Diagnoses #> 22:           Health-related outcomes > Hospital inpatient > Summary Diagnoses #> 23:          Health-related outcomes > Hospital inpatient > Summary Operations #> 24:          Health-related outcomes > Hospital inpatient > Summary Operations #> 25:           Health-related outcomes > Hospital inpatient > Summary Diagnoses #> 26:           Health-related outcomes > Hospital inpatient > Summary Diagnoses #> 27:          Health-related outcomes > Hospital inpatient > Summary Operations #> 28:          Health-related outcomes > Hospital inpatient > Summary Operations #>                                                                           Path #>     Category FieldID                                                     Field #>       <char>  <char>                                                    <char> #>  1:   100094      31                                                       Sex #>  2:   100094      34                                             Year of birth #>  3:   100094      52                                            Month of birth #>  4:   100024      53                       Date of attending assessment centre #>  5:   100011    4080                Systolic blood pressure, automated reading #>  6:   100074   20001                                Cancer code, self-reported #>  7:   100074   20002                    Non-cancer illness code, self-reported #>  8:   100075   20003                                 Treatment/medication code #>  9:   100076   20004                                            Operation code #> 10:   100074   20006             Interpolated Year when cancer first diagnosed #> 11:   100074   20008 Interpolated Year when non-cancer illness first diagnosed #> 12:   100076   20010               Interpolated Year when operation took place #> 13:   100065   21000                                         Ethnic background #> 14:   100010   21001                                     Body mass index (BMI) #> 15:   100093   40000                                             Date of death #> 16:   100093   40001                Underlying (primary) cause of death: ICD10 #> 17:   100093   40002           Contributory (secondary) causes of death: ICD10 #> 18:   100092   40005                                  Date of cancer diagnosis #> 19:   100092   40006                                     Type of cancer: ICD10 #> 20:   100092   40013                                      Type of cancer: ICD9 #> 21:     2002   41270                                         Diagnoses - ICD10 #> 22:     2002   41271                                          Diagnoses - ICD9 #> 23:     2005   41272                              Operative procedures - OPCS4 #> 24:     2005   41273                              Operative procedures - OPCS3 #> 25:     2002   41280                Date of first in-patient diagnosis - ICD10 #> 26:     2002   41281                 Date of first in-patient diagnosis - ICD9 #> 27:     2005   41282                 Date of first operative procedure - OPCS4 #> 28:     2005   41283                 Date of first operative procedure - OPCS3 #>     Category FieldID                                                     Field #>     Participants   Items Stability            ValueType  Units ItemType  Strata #>           <char>  <char>    <char>               <char> <char>   <char>  <char> #>  1:       502413  502413  Complete   Categorical single   <NA>     Data Primary #>  2:       502413  502413  Complete              Integer  years     Data Primary #>  3:       502413  502413  Complete   Categorical single   <NA>     Data Primary #>  4:       502414  579587  Complete                 Date   <NA>     Data Primary #>  5:       475231 1061497  Complete              Integer   mmHg     Data Primary #>  6:        45950   54022  Complete Categorical multiple   <NA>     Data Derived #>  7:       386743 1145486  Complete Categorical multiple   <NA>     Data Derived #>  8:       373347 1389143  Complete Categorical multiple   <NA>     Data Primary #>  9:       399178 1003287  Complete Categorical multiple   <NA>     Data Derived #> 10:        45950   54022  Complete           Continuous  years     Data Primary #> 11:       386742 1145473  Complete           Continuous  years     Data Primary #> 12:       399176 1003283  Complete           Continuous  years     Data Primary #> 13:       501521  533516  Complete   Categorical single   <NA>     Data Derived #> 14:       499421  574596  Complete           Continuous  Kg/m2     Data Derived #> 15:        37897   37957  Accruing                 Date   <NA>     Data Primary #> 16:        37735   37795  Accruing   Categorical single   <NA>     Data Primary #> 17:        24774   56655  Accruing   Categorical single   <NA>     Data Primary #> 18:       116047  156178  Accruing                 Date   <NA>     Data Primary #> 19:       111445  140930  Accruing   Categorical single   <NA>     Data Primary #> 20:        11221   15240  Accruing   Categorical single   <NA>     Data Primary #> 21:       440019 6302100   Ongoing Categorical multiple   <NA>     Data Primary #> 22:        20299   58684   Ongoing Categorical multiple   <NA>     Data Primary #> 23:       440161 4977062   Ongoing Categorical multiple   <NA>     Data Primary #> 24:        10699   18579   Ongoing Categorical multiple   <NA>     Data Primary #> 25:       440016 6301998   Ongoing                 Date   <NA>     Data Primary #> 26:        20299   58684   Ongoing                 Date   <NA>     Data Primary #> 27:       440155 4976965   Ongoing                 Date   <NA>     Data Primary #> 28:        10699   18579   Ongoing                 Date   <NA>     Data Primary #>     Participants   Items Stability            ValueType  Units ItemType  Strata #>      Sexed Instances  Array Coding #>     <char>    <char> <char> <char> #>  1: Unisex         1      1      9 #>  2: Unisex         1      1   <NA> #>  3: Unisex         1      1      8 #>  4: Unisex         4      1   <NA> #>  5: Unisex         4      2   <NA> #>  6: Unisex         4      6      3 #>  7: Unisex         4     34      6 #>  8: Unisex         4     48      4 #>  9: Unisex         4     32      5 #> 10: Unisex         4      6     13 #> 11: Unisex         4     34     13 #> 12: Unisex         4     32     13 #> 13: Unisex         3      1   1001 #> 14: Unisex         4      1   <NA> #> 15: Unisex         2      1   <NA> #> 16: Unisex         2      1     19 #> 17: Unisex         2     14     19 #> 18: Unisex        18      1   <NA> #> 19: Unisex        18      1     19 #> 20: Unisex        15      1     87 #> 21: Unisex         1    243     19 #> 22: Unisex         1     47     87 #> 23: Unisex         1    124    240 #> 24: Unisex         1     16    259 #> 25: Unisex         1    243   <NA> #> 26: Unisex         1     47   <NA> #> 27: Unisex         1    124   <NA> #> 28: Unisex         1     16   <NA> #>      Sexed Instances  Array Codingotescharex of participant.  Acquired from central registry at recruitment, but in some cases updated by the participant. Hence this field may contain a mixture of the sex the NHS had recorded for the participant and self-reported sexear of birth of participant. Acquired from central registry, updated by participantalendar month of birth of participant. Acquired from central registry, updated by participantate when a participant attended a UK Biobank assessment centre.  Automatically acquired at Reception stagelood pressure, automated reading, systolic. Two measures of blood pressure were taken a few moments apart.   Range returned by the Omron device is isode for cancer. If the participant was uncertain of the type of cancer they had had, then they described it to the interviewer (a trained nurse) who attempted to place it within the coding tree. If the cancer could not be located in the coding tree then the interviewer entered a free-text description of it. These free-text descriptions were subsequently examined by a doctor and, where possible, matched to entries in the coding tree. Free-text descriptions which could not be matched with very high probability have been marked as \"\"unclassifiableode for non-cancer illness. If the participant was uncertain of the type of illness they had had, then they described it to the interviewer (a trained nurse) who attempted to place it within the coding tree. If the illness could not be located in the coding tree then the interviewer entered a free-text description of it. These free-text descriptions were subsequently examined by a doctor and, where possible, matched to entries in the coding tree. Free-text descriptions which could not be matched with very high probability have been marked as \"\"unclassifiable\"\".   Note that myasthenia gravis appears twice (under codes 1260 and 1437). Please ensure you use both codes to capture all relevant diagnosesode for treatment Negative codes indicate free-text entryode for operation. If the participant was uncertain of the type of operation they had undergone, then they described it to the interviewer (a trained nurse) who attempted to place it within the coding tree. If the operation could not be located in the coding tree then the interviewer entered a free-text description of it. These free-text descriptions were subsequently examined by a doctor and, where possible, matched to entries in the coding tree. Free-text descriptions which could not be matched with very high probability have been marked as \"\"unclassifiablehis is the interpolated time when the participant indicated the corresponding cancer was first diagnosed by a doctor, measured in years.    If the participant gave a calendar year, then the best-fit time is half-way through that year. For example if the year was given as 1970, then the value presented is 1970.5   If the participant gave their age then the value presented is the fractional year corresponding to the mid-point of that age. For example, if the participant said they were 30 years old then the value is the date at which they were 30years+6months.  Interpolated values before the date of birth were truncated forwards to that time.   Interpolated values after the time of data acquisition were truncated back to that timehis is the interpolated time when the participant indicated the corresponding condition was first diagnosed by a doctor, measured in years.    If the participant gave a calendar year, then the best-fit time is half-way through that year. For example if the year was given as 1970, then the value presented is 1970.5   If the participant gave their age then the value presented is the fractional year corresponding to the mid-point of that age. For example, if the participant said they were 30 years old then the value is the date at which they were 30years+6months.  Interpolated values before the date of birth were truncated forwards to that time.   Interpolated values after the time of data acquisition were truncated back to that timehis is the year when the participant indicated the operation took placehis is an amalgam of sequential branching questions asked during the initial Assessment Centre visit as part of the touchscreen questionnaire.    The question was dropped from the touchscreen protocol onvalue here is constructed from height and weight measured during the initial Assessment Centre visit. Value is not present if either of these readings were omittedate of death. Acquired from central registrynderlying/primary cause of death reported for participant. Note that this may not match the text value in Field 40010 due to transcription errors at source.  Acquired from central registryontributory/secondary causes of death reported for participant. There may be zero, one or many. Acquired from central registryate of cancer diagnosis, acquired from central registry.  Note that data from the most recent 12-18 months is still accruing (i.e. it is not complete).   The events/dates are indexed in the order in which they are received and processed by UK Biobank rather than in their own chronological orderhe ICD-10 code for the type of cancer. Acquired from central registry. The ICD-10 tree displayed on this page includes all cancer records for each UK Biobank participant (for which there may be multiple ICD codes). For more information on the first diagnosed cancer in each participant, please refer to Categoryhe ICD9 code for the type of cancer. Acquired from central registryhis field is a summary of the distinct diagnosis codes a participant has had recorded across all their hospital inpatient records in either the primary or secondary position. Diagnoses are coded according to the International Classification of Disease version 10 (ICD-10).   The corresponding date each diagnosis was first recorded across all their episodes in hospital is given in Fieldhis field is a summary of the distinct diagnosis codes a participant has had recorded across all their hospital inpatient records in either the primary or secondary position. Diagnoses are coded according to the International Classification of Disease version 9 (ICD-9).  The corresponding date each diagnosis was first recorded in each participant's hospital inpatient records is given in Field 41281.  Please note ICD-9 coded hospital inpatient data are only available for older Scottish hospital recordshis field is a summary of the operation and procedure codes a participant has had recorded across all their hospital inpatient records in either the main or secondary position. Operative procedures are coded according to the Office of Population Censuses and Surveys Classification of Interventions and Procedures, version 4 (OPCS-4).  The corresponding date when each procedure was first recorded in the inpatient data can be found in Fieldhis field is a summary of the operation and procedure codes a participant has had recorded across all their hospital inpatient records in either the main or secondary position. Operative procedures are coded according to the Office of Population Censuses and Surveys Classification of Interventions and Procedures, version 3 (OPCS-3).  The corresponding date when each procedure was first recorded in the inpatient data can be found in Field 41283.  Please note OPCS-3 coded hospital inpatient data are only available for older Scottish hospital recordshis field provides, for each participant, the date each ICD-10 diagnosis code was first recorded in either the primary or secondary position in the participant's hospital inpatient records (in the field DIAG_ICD10 in the HESIN_DIAG table).  The date given is the episode start date (the EPISTART field on the HESIN table), or if this was missing the admission date (the ADMIDATE field on the HESIN table). See the Inpatient data Dictionary (Resource 141140) in Category 2000 for information about the HESIN and HESIN_DIAG tables.  The corresponding ICD-10 diagnosis codes can be found in data-field Field 41270 and the two fields can be linked using the array structurehis field provides, for each participant, the date each ICD-9 diagnosis code was first recorded as a primary or secondary diagnosis in the participant's hospital inpatient records (in the field DIAG_ICD9 in the HESIN_DIAG table).  The date given is the episode start date (the EPISTART field on the HESIN table), or if this was missing the admission date (the ADMIDATE field on the HESIN table). See the Inpatient data Dictionary (Resource 141140) in Category 2000 for information about the HESIN and HESIN_DIAG tables.  The corresponding ICD-9 diagnosis codes can be found in data-field Field 41271 and the two fields can be linked using the array structure.   Please note ICD-9 coded hospital data are only available for older Scottish hospital records. #> 27:                                                                                                           This field provides, for each participant, the dates when each of the procedures in Field 41272 was first recorded in the participant's hospital inpatient records (in either the main or a secondary position). The date can be linked to Field 41272 by using the array structure.   Please note that we have opted to populate this data-field with the episode start date (EPISTART in the HESIN table) or, if that was missing, the admission start date (ADMIDATE in the HESIN table) rather than use the operation date (OPDATE in the HESIN_OPER table). The rationale for this was:    around 1 in 5 primary procedures lacked a corresponding value for OPDATE in HESIN_OPER;     some recorded OPDATEs were inconsistent with the other date fields such as EPISTART, ADMIDATE, EPIEND and DISDATE (most likely due to data entry errors);     for those episodes with a value for OPDATE recorded the majority were the same as the value of EPISTART, with around 99% of OPDATE values within 7 days of the value of EPISTART;     values of EPISTART/ADMIDATE are more complete and thus may provide greater consistency across data providers.     See the Operations tab of the Hospital Inpatient Data Dictionary (Resource 141140) for further information about these fields. #> 28: This field provides, for each participant, the dates when each of the procedures in Field 41273 was first recorded in the participant's hospital inpatient records (in either the main or a secondary position). The date can be linked to Field 41273 by using the array structure.   Please note that we have opted to populate this data-field with the episode start date (EPISTART in the HESIN table) or, if that was missing, the admission start date (ADMIDATE in the HESIN table) rather than use the operation date (OPDATE in the HESIN_OPER table). The rationale for this was:    around 1 in 5 primary procedures lacked a corresponding value for OPDATE in HESIN_OPER;     some recorded OPDATEs were inconsistent with the other date fields such as EPISTART, ADMIDATE, EPIEND and DISDATE (most likely due to data entry errors);     for those episodes with a value for OPDATE recorded the majority were the same as the value of EPISTART, with around 99% of OPDATE values within 7 days of the value of EPISTART;     values of EPISTART/ADMIDATE are more complete and thus may provide greater consistency across data providers.     See the Operations tab of the Hospital Inpatient Data Dictionary (Resource 141140) for further information about these fields.  Please note OPCS-3 coded hospital inpatient data are only available for older Scottish hospital recordsotes #>                                                    Link #>                                                  <char> #>  1:    http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=31 #>  2:    http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=34 #>  3:    http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=52 #>  4:    http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=53 #>  5:  http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=4080 #>  6: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20001 #>  7: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20002 #>  8: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20003 #>  9: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20004 #> 10: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20006 #> 11: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20008 #> 12: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=20010 #> 13: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=21000 #> 14: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=21001 #> 15: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40000 #> 16: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40001 #> 17: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40002 #> 18: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40005 #> 19: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40006 #> 20: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=40013 #> 21: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41270 #> 22: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41271 #> 23: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41272 #> 24: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41273 #> 25: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41280 #> 26: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41281 #> 27: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41282 #> 28: http://biobank.ndph.ox.ac.uk/ukb/field.cgi?id=41283 #>                                                    Link"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy UK Biobank data ‚Äî get_ukb_dummy","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"Either read dummy UK Biobank dataset R return file path .","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"","code":"get_ukb_dummy(file_name, path_only = FALSE)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"file_name Name dummy dataset file. path_only TRUE, return file path dummy dataset file, otherwise FALSE (default), read dummy dataset R.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"data frame path_only FALSE (default) string path_only TRUE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"following dummy datasets included package: dummy_Data_Dictionary_Showcase.tsv: subset fields UK Biobank data dictionary (full version available UK Biobank data showcase website). dummy_Codings.tsv: subset UK Biobank data codings (full version available UK Biobank data showcase website). dummy_ukb_main.tsv: dummy main UK Biobank dataset. May read R read_ukb(). Tidy clinical events fields tidy_clinical_events(). dummy_gp_clinical.txt: dummy UK Biobank primary care clinical event records dataset. dummy_gp_scripts.txt: dummy UK Biobank primary care prescription records dataset.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/get_ukb_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy UK Biobank data ‚Äî get_ukb_dummy","text":"","code":"library(magrittr)  # available dummy datasets dummy_datasets <- c(   \"dummy_Data_Dictionary_Showcase.tsv\",   \"dummy_Codings.tsv\",   \"dummy_ukb_main.tsv\",   \"dummy_gp_clinical.txt\",   \"dummy_gp_scripts.txt\" )  # read dummy dataset into R get_ukb_dummy(\"dummy_ukb_main.tsv\") #>       eid 31-0.0 34-0.0 52-0.0 21000-0.0 21000-1.0 21000-2.0 21001-0.0 #>     <int> <char> <char> <char>    <char>    <char>    <char>    <char> #>  1:     1      0   1952      8        -1         2      3003   20.1115 #>  2:     2      0   1946      3        -3      2001      3004   30.1536 #>  3:     3      1   1951      4         1      2002        -1   22.8495 #>  4:     4      0   1956      9      1001      2003      4001      <NA> #>  5:     5   <NA>   <NA>      4      1002      2004      4002   29.2752 #>  6:     6      1   1948      2      1003         3      4003   28.2567 #>  7:     7      0   1949     12      <NA>      3001         5      <NA> #>  8:     8      1   1956     10      <NA>         5      <NA>      <NA> #>  9:     9      0   1962      4      4001      <NA>      <NA>   25.4016 #> 10:    10      1   1953      2      4001      <NA>      <NA>      <NA> #>     21001-1.0 21001-2.0 4080-0.0 4080-0.1 4080-0.2 4080-0.3 4080-1.0 4080-1.1 #>        <char>    <char>   <char>   <char>   <char>   <char>   <char>   <char> #>  1:    20.864      <NA>     <NA>      134      134      134      159      134 #>  2:   20.2309   27.4936      146      145      145     <NA>      129      145 #>  3:   26.7929   27.6286      143      123      123      123      162      123 #>  4:      <NA>      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>  5:   19.7576   14.6641     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>  6:    30.286   27.3534     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>  7:      <NA>      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>  8:      <NA>      <NA>     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>  9:   21.9371   24.4897     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #> 10:   25.1579   30.0483     <NA>     <NA>     <NA>     <NA>     <NA>     <NA> #>     4080-1.2 4080-1.3 20001-0.0 20001-0.3 20001-2.0 20001-2.3 20002-0.0 #>       <char>   <char>    <char>    <char>    <char>    <char>    <char> #>  1:      134     <NA>      1048      1005      1045      1017      1665 #>  2:      145      145      1046      1003      1028      1039      1383 #>  3:      123      123      <NA>      <NA>      <NA>      <NA>      1665 #>  4:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      1383 #>  5:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  6:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  7:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  8:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  9:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #> 10:     <NA>     <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>     20002-0.3 20002-2.0 20002-2.3 20006-0.0 20006-0.3 20006-2.0 20006-2.3 #>        <char>    <char>    <char>    <char>    <char>    <char>    <char> #>  1:      1223      1514      <NA> 2012.8173 2007.0874 2023.2047 2014.7373 #>  2:      1352      1447      1165 2016.0638 2023.1635 2024.0358 2013.2044 #>  3:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  4:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  5:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  6:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  7:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  8:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  9:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #> 10:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>     20008-0.0 20008-0.3 20008-2.0 20008-2.3 41270-0.0 41270-0.3 41271-0.0 #>        <char>    <char>    <char>    <char>    <char>    <char>    <char> #>  1: 1998.9782 2003.1527 2011.2636  2018.786      X715       E10    E89115 #>  2: 2011.0121  2020.502 1981.1627 1983.0059       E11     M0087     E8326 #>  3:        -3      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  4:        -1      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  5:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  6:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  7:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  8:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>  9:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #> 10:      <NA>      <NA>      <NA>      <NA>      <NA>      <NA>      <NA> #>     41271-0.3  41280-0.0  41280-0.3  41281-0.0  41281-0.3 40001-0.0 40001-1.0 #>        <char>     <char>     <char>     <char>     <char>    <char>    <char> #>  1:      <NA> 1955-11-12 1910-02-19 1917-10-08 1969-11-23      X095      X095 #>  2:     75513 1939-02-16 1965-08-08 1955-02-11 1956-09-12      A162      A162 #>  3:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  4:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  5:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  6:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  7:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  8:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>  9:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #> 10:      <NA>       <NA>       <NA>       <NA>       <NA>      <NA>      <NA> #>     40002-0.0 40002-1.3  40000-0.0  40000-1.0  20003-0.0  20003-2.0  20003-2.3 #>        <char>    <char>     <char>     <char>     <char>     <char>     <char> #>  1:      W192      X715 1917-10-08 1910-02-19 1140861958 1141146188 1141184722 #>  2:      V374      <NA> 1955-02-11 1965-08-08 1141146234 1141184722 1140861958 #>  3:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  4:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  5:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  6:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  7:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  8:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>  9:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #> 10:      <NA>      <NA>       <NA>       <NA>       <NA>       <NA>       <NA> #>         53-0.0     53-2.0  40005-0.0  40005-2.0 40006-0.0 40006-2.0 40013-0.0 #>         <char>     <char>     <char>     <char>    <char>    <char>    <char> #>  1: 1955-02-11 1910-02-19 1956-11-24 1962-09-04     M4815      C850     27134 #>  2: 1965-08-08 1915-03-18 1910-10-04       <NA>      <NA>      W192      9626 #>  3:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  4:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  5:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  6:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  7:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  8:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>  9:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #> 10:       <NA>       <NA>       <NA>       <NA>      <NA>      <NA>      <NA> #>     40013-2.0 41272-0.0 41272-0.3  41282-0.0  41282-0.3 41273-0.0 41273-0.3 #>        <char>    <char>    <char>     <char>     <char>    <char>    <char> #>  1:      2042       A01      A018 1956-11-24 1969-11-23       001      0081 #>  2:    E90200      A023       A02 1910-10-04 1956-09-12      0011      0071 #>  3:      <NA>       H01      <NA>       <NA>       <NA>      <NA>      <NA> #>  4:      <NA>      H011      <NA>       <NA>       <NA>      <NA>      <NA> #>  5:      <NA>      H022      <NA>       <NA>       <NA>      <NA>      <NA> #>  6:      <NA>      H013      <NA>       <NA>       <NA>      <NA>      <NA> #>  7:      <NA>      H018      <NA>       <NA>       <NA>      <NA>      <NA> #>  8:      <NA>      H019      <NA>       <NA>       <NA>      <NA>      <NA> #>  9:      <NA>      <NA>      <NA>       <NA>       <NA>      <NA>      <NA> #> 10:      <NA>      <NA>      <NA>       <NA>       <NA>      <NA>      <NA> #>      41283-0.0  41283-0.3 20004-0.0 20004-0.3 20010-0.0 20010-0.3 #>         <char>     <char>    <char>    <char>    <char>    <char> #>  1: 1969-11-23 1955-11-12      1102      1108 2012.8173 2008.2342 #>  2: 1956-09-12 1939-02-16      1105      1109 2016.0638      <NA> #>  3:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  4:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  5:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  6:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  7:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  8:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #>  9:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA> #> 10:       <NA>       <NA>      <NA>      <NA>      <NA>      <NA>  # get file path to dummy dataset get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE) #> [1] \"/home/runner/work/ukbwranglr/ukbwranglr/renv/library/R-4.4/x86_64-pc-linux-gnu/ukbwranglr/extdata/dummy_ukb_main.tsv\"  # read all available dummy dataset into R dummy_datasets %>%   purrr::set_names() %>%   purrr::map(get_ukb_dummy, path_only = FALSE) %>%   purrr::map(tibble::as_tibble) #> $dummy_Data_Dictionary_Showcase.tsv #> # A tibble: 28 √ó 17 #>    Path      Category FieldID Field Participants Items Stability ValueType Units #>    <chr>     <chr>    <chr>   <chr> <chr>        <chr> <chr>     <chr>     <chr> #>  1 Populati‚Ä¶ 100094   31      Sex   502413       5024‚Ä¶ Complete  Categori‚Ä¶ NA    #>  2 Populati‚Ä¶ 100094   34      Year‚Ä¶ 502413       5024‚Ä¶ Complete  Integer   years #>  3 Populati‚Ä¶ 100094   52      Mont‚Ä¶ 502413       5024‚Ä¶ Complete  Categori‚Ä¶ NA    #>  4 Assessme‚Ä¶ 100024   53      Date‚Ä¶ 502414       5795‚Ä¶ Complete  Date      NA    #>  5 Assessme‚Ä¶ 100011   4080    Syst‚Ä¶ 475231       1061‚Ä¶ Complete  Integer   mmHg  #>  6 Assessme‚Ä¶ 100074   20001   Canc‚Ä¶ 45950        54022 Complete  Categori‚Ä¶ NA    #>  7 Assessme‚Ä¶ 100074   20002   Non-‚Ä¶ 386743       1145‚Ä¶ Complete  Categori‚Ä¶ NA    #>  8 Assessme‚Ä¶ 100075   20003   Trea‚Ä¶ 373347       1389‚Ä¶ Complete  Categori‚Ä¶ NA    #>  9 Assessme‚Ä¶ 100076   20004   Oper‚Ä¶ 399178       1003‚Ä¶ Complete  Categori‚Ä¶ NA    #> 10 Assessme‚Ä¶ 100074   20006   Inte‚Ä¶ 45950        54022 Complete  Continuo‚Ä¶ years #> # ‚Ñπ 18 more rows #> # ‚Ñπ 8 more variables: ItemType <chr>, Strata <chr>, Sexed <chr>, #> #   Instances <chr>, Array <chr>, Coding <chr>, Notes <chr>, Link <chr> #>  #> $dummy_Codings.tsv #> # A tibble: 425 √ó 3 #>    Coding Value Meaning  #>    <chr>  <chr> <chr>    #>  1 8      1     January  #>  2 8      10    October  #>  3 8      11    November #>  4 8      12    December #>  5 8      2     February #>  6 8      3     March    #>  7 8      4     April    #>  8 8      5     May      #>  9 8      6     June     #> 10 8      7     July     #> # ‚Ñπ 415 more rows #>  #> $dummy_ukb_main.tsv #> # A tibble: 10 √ó 71 #>      eid `31-0.0` `34-0.0` `52-0.0` `21000-0.0` `21000-1.0` `21000-2.0` #>    <int> <chr>    <chr>    <chr>    <chr>       <chr>       <chr>       #>  1     1 0        1952     8        -1          2           3003        #>  2     2 0        1946     3        -3          2001        3004        #>  3     3 1        1951     4        1           2002        -1          #>  4     4 0        1956     9        1001        2003        4001        #>  5     5 NA       NA       4        1002        2004        4002        #>  6     6 1        1948     2        1003        3           4003        #>  7     7 0        1949     12       NA          3001        5           #>  8     8 1        1956     10       NA          5           NA          #>  9     9 0        1962     4        4001        NA          NA          #> 10    10 1        1953     2        4001        NA          NA          #> # ‚Ñπ 64 more variables: `21001-0.0` <chr>, `21001-1.0` <chr>, `21001-2.0` <chr>, #> #   `4080-0.0` <chr>, `4080-0.1` <chr>, `4080-0.2` <chr>, `4080-0.3` <chr>, #> #   `4080-1.0` <chr>, `4080-1.1` <chr>, `4080-1.2` <chr>, `4080-1.3` <chr>, #> #   `20001-0.0` <chr>, `20001-0.3` <chr>, `20001-2.0` <chr>, `20001-2.3` <chr>, #> #   `20002-0.0` <chr>, `20002-0.3` <chr>, `20002-2.0` <chr>, `20002-2.3` <chr>, #> #   `20006-0.0` <chr>, `20006-0.3` <chr>, `20006-2.0` <chr>, `20006-2.3` <chr>, #> #   `20008-0.0` <chr>, `20008-0.3` <chr>, `20008-2.0` <chr>, ‚Ä¶ #>  #> $dummy_gp_clinical.txt #> # A tibble: 12 √ó 8 #>      eid data_provider event_dt   read_2 read_3 value1 value2 value3 #>    <int> <chr>         <chr>      <chr>  <chr>  <chr>  <chr>  <chr>  #>  1     1 1             03/03/1903 C      NA     1      2      3      #>  2     1 4             01/01/1901 A      NA     1      2      3      #>  3     1 3             07/07/2037 NA     E      1      2      3      #>  4     3 1             07/07/2037 E      NA     1      2      3      #>  5     4 2             01/02/1999 J      NA     1      2      3      #>  6     8 1             01/02/1999 G      NA     1      2      3      #>  7     1 1             01/10/1990 C108.  NA     NA     NA     NA     #>  8     2 2             02/10/1990 C109.  NA     NA     NA     NA     #>  9     1 3             03/10/1990 NA     X40J4  NA     NA     NA     #> 10     2 3             04/10/1990 NA     X40J5  NA     NA     NA     #> 11     1 1             03/10/1990 C108.  NA     NA     NA     NA     #> 12     2 2             04/10/1990 C109.  NA     NA     NA     NA     #>  #> $dummy_gp_scripts.txt #> # A tibble: 6 √ó 8 #>     eid data_provider issue_date read_2 bnf_code     dmd_code drug_name quantity #>   <int> <chr>         <chr>      <chr>  <chr>        <chr>    <chr>     <chr>    #> 1     1 1             03/03/1903 bxi300 NA           1        drug2     50       #> 2     1 4             01/01/1901 bxi3   NA           NA       NA        NA       #> 3     1 3             07/07/2037 NA     02.02.01.00‚Ä¶ NA       drug2     30       #> 4     3 1             07/07/2037 bd3j00 NA           1        drug2     30       #> 5     4 2             01/02/1999 bd3j   02020100     NA       drug2     30       #> 6     8 1             01/02/1999 NA     NA           1        2         30       #>"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/label_ukb_main.html","id":null,"dir":"Reference","previous_headings":"","what":"Label a UK Biobank main dataset ‚Äî label_ukb_main","title":"Label a UK Biobank main dataset ‚Äî label_ukb_main","text":"Applies variable labels factor labels coded values UK Biobank main dataset.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/label_ukb_main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label a UK Biobank main dataset ‚Äî label_ukb_main","text":"","code":"label_ukb_main(   ukb_main,   data_dict,   ukb_codings = get_ukb_codings(),   colnames_col = \"descriptive_colnames\",   max_n_labels = 30 )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/label_ukb_main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label a UK Biobank main dataset ‚Äî label_ukb_main","text":"ukb_main UK Biobank main dataset (data frame) data_dict data dictionary specific UKB main dataset file, generated make_data_dict. can filtered subset columns labelled. ukb_codings UKB codings file (available online UK Biobank data showcase. data frame columns type character. colnames_col name column data_dict contains column names matching ukb_main. max_n_labels Coded variables associated value labels less equal threshold labelled factors. NULL, value labels applied. Default value 30.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/label_ukb_main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label a UK Biobank main dataset ‚Äî label_ukb_main","text":"data frame.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/label_ukb_main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label a UK Biobank main dataset ‚Äî label_ukb_main","text":"","code":"# \\dontrun{ # get dummy UKB data dictionary and codings dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  # file path to dummy UKB main dataset dummy_ukb_main_path <- get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE)  # to read only a subset of variables, create a data dictionary and filter # for selected variables, then supply to `read_ukb()` data_dict_selected <- make_data_dict(   ukb_main = dummy_ukb_main_path,   ukb_data_dict = dummy_ukb_data_dict ) %>%   dplyr::filter(FieldID %in% c(\"eid\", \"31\", \"34\", \"21001\"))  # read ukb_main as is, and label afterwards read_ukb(   path = dummy_ukb_main_path,   data_dict = data_dict_selected,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings,   descriptive_colnames = TRUE,   label = FALSE ) %>%   label_ukb_main(     data_dict = data_dict_selected,     ukb_codings = dummy_ukb_codings,     colnames_col = \"descriptive_colnames\"   ) #> Error in label_ukb_main(., data_dict = data_dict_selected, ukb_codings = dummy_ukb_codings,     colnames_col = \"descriptive_colnames\"): could not find function \"label_ukb_main\" # }"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"Adds tables named clinical_events, optionally 'gp_clinical_values' 'gp_scripts_names_and_quantities' SQLite database file (latter 2 added gp_clinical_path /gp_scripts_path respectively provided). long format table combining clinical events data UK Biobank main dataset UK Biobank primary care clinical events dataset. Use clinical_events_sources() see list currently included clinical events sources. Expect take ~1 hour finish running.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"","code":"make_clinical_events_db(   ukb_main_path,   ukb_db_path,   ukb_main_delim = \"auto\",   gp_clinical_path = NULL,   gp_scripts_path = NULL,   ukb_data_dict = get_ukb_data_dict(),   ukb_codings = get_ukb_codings(),   overwrite = FALSE,   chunk_size = 5e+05 )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"ukb_main_path Path main UKB dataset file. ukb_db_path Path SQLite database file. file name must end '.db'. file name exists one created. ukb_main_delim Delimiter ukb_main_path. Default value \"auto\". gp_clinical_path (Optional) path UKB primary care clinical events file (gp_clinical.txt). gp_scripts_path (Optional) path UKB primary care prescriptions file (gp_scripts.txt). ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. ukb_codings UKB codings file (available online UK Biobank data showcase. data frame columns type character. overwrite TRUE, tables clinical_events gp_clinical_values overwritten already exist database. Default value FALSE. chunk_size number rows include chunk processing primary care datasets.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"Returns ukb_db_path invisibly.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"See introduction dbplyr vignette getting started databases dplyr::dplyr. Indexes set source, code eid columns clinical_events table faster querying.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_clinical_events_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SQLite database with a clinical_events table ‚Äî make_clinical_events_db","text":"","code":"# dummy UKB data dictionary and codings dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  # file paths to dummy UKB main and primary care datasets dummy_ukb_main_path <- get_ukb_dummy(   \"dummy_ukb_main.tsv\",   path_only = TRUE )  dummy_gp_clinical_path <- get_ukb_dummy(   \"dummy_gp_clinical.txt\",   path_only = TRUE )  dummy_gp_scripts_path <- get_ukb_dummy(   \"dummy_gp_scripts.txt\",   path_only = TRUE )  # file path where SQLite database will be created dummy_ukb_db_path <- file.path(tempdir(), \"ukb.db\")  # build database suppressWarnings(make_clinical_events_db(   ukb_main_path = dummy_ukb_main_path,   gp_clinical_path = dummy_gp_clinical_path,   gp_scripts_path = dummy_gp_scripts_path,   ukb_db_path = dummy_ukb_db_path,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings, )) #> ***CREATING DATA DICTIONARY FOR UKB MAIN DATASET*** #> ***READING DIAGNOSIS COLUMNS FROM UKB MAIN DATASET INTO R*** #> STEP 1 of 2 #> Reading data into R #> STEP 2 of 2 #> Renaming with descriptive column names #> Time taken: 0 minutes, 0 seconds. #> ***TIDYING CLINICAL EVENTS DATA*** #> Tidying clinical events for primary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for secondary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_medication #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_operation #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs3 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs4 #> Time taken: 0 minutes, 0 seconds. #> ***WRITING CLINICAL EVENTS FROM MAIN UKB DATASET TO `clinical_events` TABLE IN DATABASE*** #> ***APPENDING UKB PRIMARY CARE CLINICAL EVENTS DATA TO 'clinical_events' TABLE AND WRITING VALUE COLUMNS TO `gp_clinical_values` TABLE*** #> Writing file to table #> Writing from line 1. Time taken: 0 minutes, 0 seconds #> Complete. Time taken: 0 minutes, 0 seconds #> ***APPENDING UKB PRIMARY CARE PRESCRIPTION DATA TO 'clinical_events' TABLE AND WRITING DRUG NAME AND QUANTITY COLUMNS TO `gp_scripts_names_and_quantities` TABLE*** #> Writing file to table #> Writing from line 1. Time taken: 0 minutes, 0 seconds #> Complete. Time taken: 0 minutes, 0 seconds #> ***SETTING MULTICOLUMN INDEX ON `code`/`source`, AND INDEX ON `eid` COLUMNS IN UKB DATABASE 'clinical_events' TABLE*** #> SUCCESS! UKB DATABASE SETUP COMPLETE #> To connect to db: `con <- DBI::dbConnect(RSQLite::SQLite(), '/tmp/RtmpXWKA05/ukb.db')`, then `ukbdb <- ukbwranglr::db_tables_to_list(con)` #> Time taken: 0 minutes, 1 seconds.  # connect to database con <- DBI::dbConnect(   RSQLite::SQLite(),   dummy_ukb_db_path )  ukbdb <- db_tables_to_list(con)  # table names names(ukbdb) #> [1] \"clinical_events\"                 \"gp_clinical_values\"              #> [3] \"gp_scripts_names_and_quantities\"  # view tables ukbdb$clinical_events #> # Source:   table<`clinical_events`> [?? x 5] #> # Database: sqlite 3.45.2 [/tmp/RtmpXWKA05/ukb.db] #>      eid source index code       date       #>    <int> <chr>  <chr> <chr>      <chr>      #>  1     1 f40001 0_0   X095       1917-10-08 #>  2     2 f40001 0_0   A162       1955-02-11 #>  3     1 f40001 1_0   X095       1910-02-19 #>  4     2 f40001 1_0   A162       1965-08-08 #>  5     1 f40002 0_0   W192       1917-10-08 #>  6     2 f40002 0_0   V374       1955-02-11 #>  7     1 f40002 1_3   X715       1910-02-19 #>  8     1 f20003 0_0   1140861958 1955-02-11 #>  9     2 f20003 0_0   1141146234 1965-08-08 #> 10     1 f20003 2_0   1141146188 1910-02-19 #> # ‚Ñπ more rows  ukbdb$gp_clinical_values #> # Source:   table<`gp_clinical_values`> [?? x 4] #> # Database: sqlite 3.45.2 [/tmp/RtmpXWKA05/ukb.db] #>    index value1 value2 value3 #>    <chr> <chr>  <chr>  <chr>  #>  1 1     1      2      3      #>  2 2     1      2      3      #>  3 3     1      2      3      #>  4 4     1      2      3      #>  5 5     1      2      3      #>  6 6     1      2      3      #>  7 7     NA     NA     NA     #>  8 8     NA     NA     NA     #>  9 9     NA     NA     NA     #> 10 10    NA     NA     NA     #> # ‚Ñπ more rows  ukbdb$gp_scripts_names_and_quantities #> # Source:   table<`gp_scripts_names_and_quantities`> [6 x 3] #> # Database: sqlite 3.45.2 [/tmp/RtmpXWKA05/ukb.db] #>   index drug_name quantity #>   <chr> <chr>     <chr>    #> 1 1     drug2     50       #> 2 2     NA        NA       #> 3 3     drug2     30       #> 4 4     drug2     30       #> 5 5     drug2     30       #> 6 6     2         30        # close database connection DBI::dbDisconnect(con)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_data_dict.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","title":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","text":"Creates data dictionary raw UK Biobank main dataset, either using file path data frame dataset already loaded R.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_data_dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","text":"","code":"make_data_dict(ukb_main, delim = \"auto\", ukb_data_dict = get_ukb_data_dict())"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_data_dict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","text":"ukb_main Either path UK Biobank main dataset file (character string) data frame. delim Delimiter UKB main dataset file. Default \"auto\" (see data.table::fread()). Ignored file name ends .dta (.e. STATA file) ukb_main data frame. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_data_dict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","text":"data dictionary (data frame) specific ukb_main. includes columns descriptive column names (\"descriptive_colnames\") current column names (\"colheaders_raw\").","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/make_data_dict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a UK Biobank data dictionary ‚Äî make_data_dict","text":"","code":"# dummy UKB data dictionary dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\")  # create data dictionary specific to UKB main dataset, either using file path make_data_dict(   ukb_main = get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE),   ukb_data_dict = dummy_ukb_data_dict ) #> # A tibble: 71 √ó 22 #>    descriptive_colnames     colheaders_raw colheaders_processed FieldID instance #>    <chr>                    <chr>          <chr>                <chr>   <chr>    #>  1 eid                      eid            feid                 eid     NA       #>  2 sex_f31_0_0              31-0.0         f31_0_0              31      0        #>  3 year_of_birth_f34_0_0    34-0.0         f34_0_0              34      0        #>  4 month_of_birth_f52_0_0   52-0.0         f52_0_0              52      0        #>  5 ethnic_background_f2100‚Ä¶ 21000-0.0      f21000_0_0           21000   0        #>  6 ethnic_background_f2100‚Ä¶ 21000-1.0      f21000_1_0           21000   1        #>  7 ethnic_background_f2100‚Ä¶ 21000-2.0      f21000_2_0           21000   2        #>  8 body_mass_index_bmi_f21‚Ä¶ 21001-0.0      f21001_0_0           21001   0        #>  9 body_mass_index_bmi_f21‚Ä¶ 21001-1.0      f21001_1_0           21001   1        #> 10 body_mass_index_bmi_f21‚Ä¶ 21001-2.0      f21001_2_0           21001   2        #> # ‚Ñπ 61 more rows #> # ‚Ñπ 17 more variables: array <chr>, Path <chr>, Category <chr>, Field <chr>, #> #   Participants <chr>, Items <chr>, Stability <chr>, ValueType <chr>, #> #   Units <chr>, ItemType <chr>, Strata <chr>, Sexed <chr>, Instances <chr>, #> #   Array <chr>, Coding <chr>, Notes <chr>, Link <chr>  # ...or from data frame make_data_dict(   ukb_main = get_ukb_dummy(\"dummy_ukb_main.tsv\"),   ukb_data_dict = dummy_ukb_data_dict ) #> # A tibble: 71 √ó 22 #>    descriptive_colnames     colheaders_raw colheaders_processed FieldID instance #>    <chr>                    <chr>          <chr>                <chr>   <chr>    #>  1 eid                      eid            feid                 eid     NA       #>  2 sex_f31_0_0              31-0.0         f31_0_0              31      0        #>  3 year_of_birth_f34_0_0    34-0.0         f34_0_0              34      0        #>  4 month_of_birth_f52_0_0   52-0.0         f52_0_0              52      0        #>  5 ethnic_background_f2100‚Ä¶ 21000-0.0      f21000_0_0           21000   0        #>  6 ethnic_background_f2100‚Ä¶ 21000-1.0      f21000_1_0           21000   1        #>  7 ethnic_background_f2100‚Ä¶ 21000-2.0      f21000_2_0           21000   2        #>  8 body_mass_index_bmi_f21‚Ä¶ 21001-0.0      f21001_0_0           21001   0        #>  9 body_mass_index_bmi_f21‚Ä¶ 21001-1.0      f21001_1_0           21001   1        #> 10 body_mass_index_bmi_f21‚Ä¶ 21001-2.0      f21001_2_0           21001   2        #> # ‚Ñπ 61 more rows #> # ‚Ñπ 17 more variables: array <chr>, Path <chr>, Category <chr>, Field <chr>, #> #   Participants <chr>, Items <chr>, Stability <chr>, ValueType <chr>, #> #   Units <chr>, ItemType <chr>, Strata <chr>, Sexed <chr>, Instances <chr>, #> #   Array <chr>, Coding <chr>, Notes <chr>, Link <chr>"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/mutate_age_at_event_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","title":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","text":"Mutates numeric columns age event (years) columns match regex supplied date_col_regex.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/mutate_age_at_event_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","text":"","code":"mutate_age_at_event_cols(   ukb_main,   dob_col = \"dob\",   date_col_regex = \"_date$\",   date_col_regex_replacement = \"_age\" )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/mutate_age_at_event_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","text":"ukb_main UKB main dataset (data frame) containing column named \"eid\" date birth column, well date columns matching regex supplied date_col_regex argument. dob_col character. name date birth column ukb_main. date_col_regex character. regular expression matches date columns processed ukb_main. date_col_regex_replacement character. New \"age--event\" columns names matching input date columns, replacing regex supplied date_col_regex string.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/mutate_age_at_event_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","text":"data frame additional \"age event\" columns (years).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/mutate_age_at_event_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate age at event columns ‚Äî mutate_age_at_event_cols","text":"","code":"# dummy data dummy_ukb_main <- tibble::tribble(   ~eid, ~dob, ~event_date,   1, \"2000-01-01\", \"2010-01-01\" )  # mutate age at event col mutate_age_at_event_cols(   dummy_ukb_main,   dob_col = \"dob\",   date_col_regex = \"_date$\",   date_col_regex_replacement = \"_age\" ) #> Calculating age at event for event_date. New colname: event_age #> # A tibble: 1 √ó 4 #>     eid dob        event_date event_age #>   <dbl> <chr>      <chr>          <dbl> #> 1     1 2000-01-01 2010-01-01      10.0"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a UK Biobank main dataset file ‚Äî read_ukb","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"Reads UK Biobank main dataset file R using either fread read_dta. Optionally renames variables descriptive names, add variable labels label coded values type character factors.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"","code":"read_ukb(   path,   delim = \"auto\",   data_dict = NULL,   ukb_data_dict = get_ukb_data_dict(),   ukb_codings = get_ukb_codings(),   descriptive_colnames = TRUE,   label = TRUE,   max_n_labels = 30,   na.strings = c(\"\", \"NA\"),   nrows = Inf,   ... )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"path path UK Biobank main dataset file. delim Delimiter UKB main dataset file. Default \"auto\" (see data.table::fread()). Ignored file name ends .dta (.e. STATA file) ukb_main data frame. data_dict data dictionary specific UKB main dataset file, generated make_data_dict. load selection columns, supply filtered copy data dictionary containing required variables. NULL (default) fields read. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. ukb_codings UKB codings file (available online UK Biobank data showcase. data frame columns type character. descriptive_colnames TRUE, rename columns longer descriptive names derived UK Biobank's data dictionary 'Field' column. label TRUE, apply variable labels label coded values factors. max_n_labels Coded variables associated value labels less equal threshold labelled factors. NULL, value labels applied. Default value 30. na.strings character vector strings interpreted NA values. default, \",,\" columns types, including type character read NA consistency. ,\"\", unambiguous read empty string. read ,NA, NA, set na.strings=\"NA\". read ,, blank string \"\", set na.strings=NULL. occur file, strings na.strings appear quoted since string literal ,\"NA\", distinguished ,NA,, example, na.strings=\"NA\". nrows maximum number rows read. Unlike read.table, need set estimate number rows file better speed already automatically determined fread almost instantly using large sample lines. nrows=0 returns column names typed empty columns determined large sample; useful dry run large file quickly check format consistency set files starting read . ... Additional parameters passed either fread read_dta","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"UK Biobank phenotype dataset data table human-readable variables labels data values.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"Note na.strings recognised read_dta. Reading STATA file may therefore require careful checking empty strings need converting NA.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/read_ukb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a UK Biobank main dataset file ‚Äî read_ukb","text":"","code":"library(magrittr) # get dummy UKB data dictionary and codings dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  # file path to dummy UKB main dataset dummy_ukb_main_path <- get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE)  # read dummy UKB main dataset into R read_ukb(   path = dummy_ukb_main_path,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) %>%   # (convert to tibble for concise print method)   tibble::as_tibble() #> Creating data dictionary #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 10 √ó 71 #>      eid sex_f31_0_0 year_of_birth_f34_0_0 month_of_birth_f52_0_0 #>    <int> <fct>                       <int> <fct>                  #>  1     1 Female                       1952 August                 #>  2     2 Female                       1946 March                  #>  3     3 Male                         1951 April                  #>  4     4 Female                       1956 September              #>  5     5 NA                             NA April                  #>  6     6 Male                         1948 February               #>  7     7 Female                       1949 December               #>  8     8 Male                         1956 October                #>  9     9 Female                       1962 April                  #> 10    10 Male                         1953 February               #> # ‚Ñπ 67 more variables: ethnic_background_f21000_0_0 <fct>, #> #   ethnic_background_f21000_1_0 <fct>, ethnic_background_f21000_2_0 <fct>, #> #   body_mass_index_bmi_f21001_0_0 <dbl>, body_mass_index_bmi_f21001_1_0 <dbl>, #> #   body_mass_index_bmi_f21001_2_0 <dbl>, #> #   systolic_blood_pressure_automated_reading_f4080_0_0 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_1 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_0_2 <int>, ‚Ä¶  # to read only a subset of variables, create a data dictionary and filter # for selected variables, then supply to `read_ukb()` data_dict_selected <- make_data_dict(   ukb_main = dummy_ukb_main_path,   ukb_data_dict = dummy_ukb_data_dict ) %>%   dplyr::filter(FieldID %in% c(\"eid\", \"31\", \"34\", \"21001\"))  read_ukb(   path = dummy_ukb_main_path,   data_dict = data_dict_selected,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds. #>       eid sex_f31_0_0 year_of_birth_f34_0_0 body_mass_index_bmi_f21001_0_0 #>     <int>      <fctr>                 <int>                          <num> #>  1:     1      Female                  1952                        20.1115 #>  2:     2      Female                  1946                        30.1536 #>  3:     3        Male                  1951                        22.8495 #>  4:     4      Female                  1956                             NA #>  5:     5        <NA>                    NA                        29.2752 #>  6:     6        Male                  1948                        28.2567 #>  7:     7      Female                  1949                             NA #>  8:     8        Male                  1956                             NA #>  9:     9      Female                  1962                        25.4016 #> 10:    10        Male                  1953                             NA #>     body_mass_index_bmi_f21001_1_0 body_mass_index_bmi_f21001_2_0 #>                              <num>                          <num> #>  1:                        20.8640                             NA #>  2:                        20.2309                        27.4936 #>  3:                        26.7929                        27.6286 #>  4:                             NA                             NA #>  5:                        19.7576                        14.6641 #>  6:                        30.2860                        27.3534 #>  7:                             NA                             NA #>  8:                             NA                             NA #>  9:                        21.9371                        24.4897 #> 10:                        25.1579                        30.0483  # set `descriptive_colnames` and `label` to FALSE to read the raw dataset as is read_ukb(   path = dummy_ukb_main_path,   data_dict = data_dict_selected,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings,   descriptive_colnames = FALSE,   label = FALSE ) #> STEP 1 of 1 #> Reading data into R #> Time taken: 0 minutes, 0 seconds. #>       eid 31-0.0 34-0.0 21001-0.0 21001-1.0 21001-2.0 #>     <int> <char>  <int>     <num>     <num>     <num> #>  1:     1      0   1952   20.1115   20.8640        NA #>  2:     2      0   1946   30.1536   20.2309   27.4936 #>  3:     3      1   1951   22.8495   26.7929   27.6286 #>  4:     4      0   1956        NA        NA        NA #>  5:     5   <NA>     NA   29.2752   19.7576   14.6641 #>  6:     6      1   1948   28.2567   30.2860   27.3534 #>  7:     7      0   1949        NA        NA        NA #>  8:     8      1   1956        NA        NA        NA #>  9:     9      0   1962   25.4016   21.9371   24.4897 #> 10:    10      1   1953        NA   25.1579   30.0483"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise numerical variables ‚Äî summarise_numerical_variables","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"Summarises numerical variables repeated measurements either field (.e. available measurements) instance (.e. measurements assessment visit). Currently available summary options mean, minimum, maximum, sum number non-missing values.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"","code":"summarise_numerical_variables(   ukb_main,   data_dict = NULL,   ukb_data_dict = get_ukb_data_dict(),   summary_function = \"mean\",   summarise_by = \"Field\",   .drop = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"ukb_main UK Biobank main dataset data frame. Column names must match descriptive_colnames column data_dict. data_dict data dictionary specific UKB main dataset file, created make_data_dict. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. summary_function summary function applied. Options: \"mean\", \"min\", \"max\", \"sum\" \"n_values\" summarise_by Whether summarise \"Field\" \"Instance\". .drop TRUE, removes original numerical variables result. Default value FALSE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"data frame new columns summarising numerical variables. names new columns prefixed value summary_function end 'x', FieldID +/- instance summarised e.g. summarising FieldID 4080 instance 0, new column named 'mean_systolic_blood_pressure_automated_reading_x4080_0'.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"Note summary_function = \"sum\", missing values converted zero. Therefore set values missing sum summarised 0. See documentation rowSums details.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/summarise_numerical_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise numerical variables ‚Äî summarise_numerical_variables","text":"","code":"library(magrittr) # get dummy UKB data and data dictionary dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  dummy_ukb_main <- read_ukb(   path = get_ukb_dummy(\"dummy_ukb_main.tsv\", path_only = TRUE),   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) %>%   dplyr::select(eid, tidyselect::contains(\"systolic_blood_pressure\")) %>%   tibble::as_tibble() #> Creating data dictionary #> STEP 1 of 3 #> Reading data into R #> STEP 2 of 3 #> Renaming with descriptive column names #> STEP 3 of 3 #> Applying variable and value labels #> Labelling dataset #> Time taken: 0 minutes, 0 seconds.  # summarise mean values by Field, keep original variables summarise_numerical_variables(   dummy_ukb_main,   ukb_data_dict = dummy_ukb_data_dict ) #> Number of summary columns to make: 1 #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 10 √ó 10 #>      eid systolic_blood_pressure‚Ä¶¬π systolic_blood_press‚Ä¶¬≤ systolic_blood_press‚Ä¶¬≥ #>    <int>                     <int>                  <int>                  <int> #>  1     1                        NA                    134                    134 #>  2     2                       146                    145                    145 #>  3     3                       143                    123                    123 #>  4     4                        NA                     NA                     NA #>  5     5                        NA                     NA                     NA #>  6     6                        NA                     NA                     NA #>  7     7                        NA                     NA                     NA #>  8     8                        NA                     NA                     NA #>  9     9                        NA                     NA                     NA #> 10    10                        NA                     NA                     NA #> # ‚Ñπ abbreviated names: ¬π‚Äãsystolic_blood_pressure_automated_reading_f4080_0_0, #> #   ¬≤‚Äãsystolic_blood_pressure_automated_reading_f4080_0_1, #> #   ¬≥‚Äãsystolic_blood_pressure_automated_reading_f4080_0_2 #> # ‚Ñπ 6 more variables: #> #   systolic_blood_pressure_automated_reading_f4080_0_3 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_1_0 <int>, #> #   systolic_blood_pressure_automated_reading_f4080_1_1 <int>, ‚Ä¶  # summarise mean values by Field, drop original variables summarise_numerical_variables(   dummy_ukb_main,   ukb_data_dict = dummy_ukb_data_dict,   .drop = TRUE ) #> Number of summary columns to make: 1 #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 10 √ó 2 #>      eid mean_systolic_blood_pressure_automated_reading_x4080 #>    <int>                                                <dbl> #>  1     1                                                 138. #>  2     2                                                 143. #>  3     3                                                 130. #>  4     4                                                 NaN  #>  5     5                                                 NaN  #>  6     6                                                 NaN  #>  7     7                                                 NaN  #>  8     8                                                 NaN  #>  9     9                                                 NaN  #> 10    10                                                 NaN   # summarise min values by instance, dropping original variables summarise_numerical_variables(   dummy_ukb_main,   ukb_data_dict = dummy_ukb_data_dict,   summary_function = \"min\",   summarise_by = \"Instance\",   .drop = TRUE ) #> Number of summary columns to make: 2 #> Time taken: 0 minutes, 0 seconds. #> # A tibble: 10 √ó 3 #>      eid min_systolic_blood_pressure_automated_reading_‚Ä¶¬π min_systolic_blood_p‚Ä¶¬≤ #>    <int>                                            <int>                  <int> #>  1     1                                              134                    134 #>  2     2                                              145                    129 #>  3     3                                              123                    123 #>  4     4                                               NA                     NA #>  5     5                                               NA                     NA #>  6     6                                               NA                     NA #>  7     7                                               NA                     NA #>  8     8                                               NA                     NA #>  9     9                                               NA                     NA #> 10    10                                               NA                     NA #> # ‚Ñπ abbreviated names: ¬π‚Äãmin_systolic_blood_pressure_automated_reading_x4080_0, #> #   ¬≤‚Äãmin_systolic_blood_pressure_automated_reading_x4080_1"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"Data UK Biobank main dataset stored wide format .e. single row data per UK Biobank participant ('eid's). Clinical events may ascertained numerous sources (e.g. self-reported medical conditions, linked hospital records) coded events associated dates recorded across multiple columns. function tidies data standardised long format table.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"","code":"tidy_clinical_events(   ukb_main,   ukb_data_dict = get_ukb_data_dict(),   ukb_codings = get_ukb_codings(),   clinical_events_sources = c(\"primary_death_icd10\", \"secondary_death_icd10\",     \"self_report_medication\", \"self_report_non_cancer\", \"self_report_non_cancer_icd10\",     \"self_report_cancer\", \"self_report_operation\", \"cancer_register_icd9\",     \"cancer_register_icd10\", \"summary_hes_icd9\", \"summary_hes_icd10\",     \"summary_hes_opcs3\", \"summary_hes_opcs4\"),   strict = TRUE,   .details_only = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"ukb_main UK Biobank main dataset. ukb_data_dict UKB data dictionary (available online UK Biobank data showcase. data frame columns type character. ukb_codings UKB codings file (available online UK Biobank data showcase. data frame columns type character. clinical_events_sources character vector clinical events sources tidy. default, available options included. strict TRUE, raise error required columns clinical events sources listed clinical_events present ukb_main. FALSE, warning message displayed instead. Default value TRUE. .details_only TRUE, return list detailing required Field IDs","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"named list clinical events data frames.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"named list data frames returned, names corresponding data sources specified clinical_events. data frame following columns: eid - participant identifier source - FieldID (prefixed 'f') clinical codes extracted . See clinical_events_sources details. index corresponding instance array (e.g. '0-1' means instance 0 array  code - clinical code. type clinical codings system used depends source. date - associated date. Note cases participants self-reported medical condition recorded date either 'Date uncertain unknown' 'Preferred answer' (see data coding 13) date set NA.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"other-notes","dir":"Reference","previous_headings":"","what":"Other notes","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"Results may combined single data frame using bind_rows.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_clinical_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy clinical events data from a UK Biobank main dataset ‚Äî tidy_clinical_events","text":"","code":"# dummy UKB main dataset and metadata dummy_ukb_main <- get_ukb_dummy(\"dummy_ukb_main.tsv\") dummy_ukb_data_dict <- get_ukb_dummy(\"dummy_Data_Dictionary_Showcase.tsv\") dummy_ukb_codings <- get_ukb_dummy(\"dummy_Codings.tsv\")  # tidy clinical events in a UK Biobank main dataset clinical_events <- tidy_clinical_events(   ukb_main = dummy_ukb_main,   ukb_data_dict = dummy_ukb_data_dict,   ukb_codings = dummy_ukb_codings ) #> Tidying clinical events for primary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for secondary_death_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_medication #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_non_cancer_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_cancer #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for self_report_operation #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for cancer_register_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd9 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_icd10 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs3 #> Time taken: 0 minutes, 0 seconds. #> Tidying clinical events for summary_hes_opcs4 #> Time taken: 0 minutes, 0 seconds.  # returns a named list of data frames, one for each `clinical_events_source` names(clinical_events) #>  [1] \"primary_death_icd10\"          \"secondary_death_icd10\"        #>  [3] \"self_report_medication\"       \"self_report_non_cancer\"       #>  [5] \"self_report_non_cancer_icd10\" \"self_report_cancer\"           #>  [7] \"self_report_operation\"        \"cancer_register_icd9\"         #>  [9] \"cancer_register_icd10\"        \"summary_hes_icd9\"             #> [11] \"summary_hes_icd10\"            \"summary_hes_opcs3\"            #> [13] \"summary_hes_opcs4\"             clinical_events$summary_hes_icd10 #>      eid source  index   code       date #>    <int> <char> <lgcl> <char>     <char> #> 1:     1 f41270     NA   X715 1955-11-12 #> 2:     2 f41270     NA    E11 1939-02-16 #> 3:     1 f41270     NA   X715 1910-02-19 #> 4:     2 f41270     NA    E11 1965-08-08 #> 5:     1 f41270     NA    E10 1955-11-12 #> 6:     2 f41270     NA  M0087 1939-02-16 #> 7:     1 f41270     NA    E10 1910-02-19 #> 8:     2 f41270     NA  M0087 1965-08-08  # use .details_only = TRUE to return details of required Field IDs for # specific clinical_events sources tidy_clinical_events(.details_only = TRUE) #> $required_field_ids #> $required_field_ids$primary_death_icd10 #> code_fid date_fid  #>  \"40001\"  \"40000\"  #>  #> $required_field_ids$secondary_death_icd10 #> code_fid date_fid  #>  \"40002\"  \"40000\"  #>  #> $required_field_ids$self_report_medication #> code_fid date_fid  #>  \"20003\"     \"53\"  #>  #> $required_field_ids$self_report_non_cancer #> code_fid date_fid  #>  \"20002\"  \"20008\"  #>  #> $required_field_ids$self_report_non_cancer_icd10 #> code_fid date_fid  #>  \"20002\"  \"20008\"  #>  #> $required_field_ids$self_report_cancer #> code_fid date_fid  #>  \"20001\"  \"20006\"  #>  #> $required_field_ids$self_report_operation #> code_fid date_fid  #>  \"20004\"  \"20010\"  #>  #> $required_field_ids$cancer_register_icd9 #> code_fid date_fid  #>  \"40013\"  \"40005\"  #>  #> $required_field_ids$cancer_register_icd10 #> code_fid date_fid  #>  \"40006\"  \"40005\"  #>  #> $required_field_ids$summary_hes_icd9 #> code_fid date_fid  #>  \"41271\"  \"41281\"  #>  #> $required_field_ids$summary_hes_icd10 #> code_fid date_fid  #>  \"41270\"  \"41280\"  #>  #> $required_field_ids$summary_hes_opcs3 #> code_fid date_fid  #>  \"41273\"  \"41283\"  #>  #> $required_field_ids$summary_hes_opcs4 #> code_fid date_fid  #>  \"41272\"  \"41282\"  #>  #>"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"Reformats UK Biobank primary care clinical events dataset match output format tidy_clinical_events.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"","code":"tidy_gp_clinical(gp_clinical, .details_only = FALSE)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"gp_clinical UK Biobank primary care clinical events dataset .details_only logical. TRUE, return character vector output table names ","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"named list. Item 'clinical_events' contains read codes event dates, item 'gp_clinical_values' contains 'value' columns.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"UK Biobank primary care clinical events data lists read codes separate columns, one Read2 one Read3. function reshapes data long format codes single column. index column values relate row numbers original data. primary care data also contains 3 'value' columns. clinical codes/dates long format 'value' columns returned list names 'clinical_events' 'gp_clinical_values' respectively.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_clinical.html","id":"other-notes","dir":"Reference","previous_headings":"","what":"Other notes","title":"Tidy UK Biobank primary care clinical events ‚Äî tidy_gp_clinical","text":"default, special date values (see resource 591 details) set NA.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"Reformats UK Biobank primary care prescriptions dataset match output format tidy_clinical_events.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"","code":"tidy_gp_scripts(gp_scripts, .details_only = FALSE)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"gp_scripts UK Biobank primary care prescriptions dataset .details_only logical. TRUE, return character vector output table names ","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"named list. Item 'clinical_events' contains read codes event dates, item 'gp_scripts_names_and_quantities' contains drug names/quantities columns.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"UK Biobank primary care prescriptions data multiple code columns (Read, BNF DMD codes). function reshapes data long format codes single column. index column values relate row numbers original data. primary care data also contains drug name quantities columns. clinical codes/dates long format drug name/quantity columns returned list names 'clinical_events' 'gp_scripts_names_and_quantities' respectively.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/tidy_gp_scripts.html","id":"other-notes","dir":"Reference","previous_headings":"","what":"Other notes","title":"Tidy UK Biobank primary care prescriptions data ‚Äî tidy_gp_scripts","text":"default, special date values (see resource 591 details) set NA.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/ukbwranglr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ukbwranglr: Exploring UKB Data ‚Äî ukbwranglr-package","title":"ukbwranglr: Exploring UKB Data ‚Äî ukbwranglr-package","text":"Functions load wrangle UK Biobank data.","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/ukbwranglr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ukbwranglr: Exploring UKB Data ‚Äî ukbwranglr-package","text":"Maintainer: Alasdair Warwick alasdair.warwick06@gmail.com","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"Checks whether data frame clinical codes correctly formatted use extract_phenotypes.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"","code":"validate_clinical_codes(clinical_codes, allow_overlapping_categories = FALSE)"},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"clinical_codes data frame. See example_clinical_codes example. allow_overlapping_categories TRUE, pass warning codes duplicated disease categories. FALSE, error raised. Default value FALSE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"Returns invisibly TRUE checks pass.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"Checks : Expected column names present columns type character missing values present column disease categories overlap .e. disease (author) contains unique set clinical codes. Overlapping disease categories may optionally permitted setting allow_overlapping_categories TRUE Note currently check whether clinical codes valid (.e. whether clinical code exists given coding system).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglr/reference/validate_clinical_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate a clinical codes data frame ‚Äî validate_clinical_codes","text":"","code":"validate_clinical_codes(example_clinical_codes())"}]
